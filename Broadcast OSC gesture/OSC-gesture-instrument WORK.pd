#N canvas 667 87 209 236 12;
#X declare -lib mrpeach;
#X text -76 60 University of Jyväskylä;
#X text -89 30 Juan Ignacio Mendoza - 2015;
#N canvas 0 22 1041 757 _mapping_ 0;
#X obj 491 698 outlet position;
#X obj 281 698 outlet pitch;
#X text -224 -9 Connect inlets \, outlets and in-betweens as you wish.
Use sends (s) and receives (r) to avoid the "spaghetti salad effect"
(lines all over the place).;
#X obj 661 698 outlet filter freq;
#X text -222 628 ------------------------------------------------------------
;
#X text 198 628 ------------------------------------------------------------
;
#X text -222 168 ------------------------------------------------------------
;
#X text 198 168 ------------------------------------------------------------
;
#X obj -96 698 outlet granulation;
#X obj 104 698 outlet looper on/off;
#N canvas 855 22 516 686 inverter 0;
#X text -147 55 Me: Huh?;
#X text -147 105 when your mouse goes towards the top of the screen
but;
#X text -147 125 currently it does exaclty the opposite \, you just
need to;
#X text -147 145 sort of invert the values.;
#X obj -145 395 inlet original signal;
#X obj -30 565 outlet inverted signal;
#X text -147 265 Me: (sigh);
#X text -147 175 Me: Hmmm... I see. So should I apply some mathematical
;
#X text -147 195 trick?;
#X text -147 315 bunch of numbers that you want to 'invert'. We call
;
#X text -147 335 this 'the original signal'. Also you need to specify
the;
#X floatatom -135 445 5 0 0 0 - - -;
#X floatatom 204 445 5 0 0 0 - - -;
#X floatatom -10 515 5 0 0 0 - - -;
#X obj 194 395 inlet upper threshold;
#X obj 24 395 inlet lower threshold;
#X floatatom 34 445 5 0 0 0 - - -;
#X obj -30 485 expr $f3-$f1+$f2;
#X text -147 353 maximum and minimum values that these numbers will
reach.;
#X text -147 25 Friendly Nerd: Invert the direction of your vector.
;
#X text -147 85 Friendly Nerd: For example if you want a raise in pitch
;
#X text -147 225 Friendly Nerd: Yup.;
#X text -147 295 Friendly Nerd: It is not complicated. You just need
the;
#X text -137 635 Friendly Nerd: You owe me an ice cream.;
#X text 100 483 <-- mathematical trick :-);
#X text -137 605 Me: Whaw! the trick is really simple! Thanks \, Friendly
Nerd!;
#X connect 4 0 17 0;
#X connect 14 0 17 2;
#X connect 15 0 17 1;
#X connect 17 0 5 0;
#X restore 491 438 pd inverter;
#N canvas 296 22 518 842 low/up 0;
#X obj 16 480 inlet original signal;
#X text 13 129 Me: Huh?;
#X text 13 222 Me: Ahmmmmm......;
#X obj 48 540 inlet lower threshold;
#X obj 80 570 inlet upper threshold;
#X obj 48 660 moses;
#X text 14 760 Me: Thanks Friendly Geek \, you are the best!;
#X obj 16 580 moses;
#X obj 48 720 outlet inner range;
#X obj 198 720 outlet low trespass;
#X obj 348 720 outlet upper trespass;
#X floatatom 58 690 5 0 0 0 - - -;
#X floatatom 36 509 5 0 0 0 - - -;
#X text 13 314 Me: I could have looked it up on Google myself.;
#X text 13 51 Friendly Nerd: A threshold. Looked it up on Google. According
to thefreedictionary.com \, threshold is "A piece of wood or stone
placed beneath a door \; a doorsill";
#X text 13 159 Friendly Nerd: Hah! It also says " Either end of an
airport runway" and "The place or point of beginning \; the outset".
;
#X text 13 252 Friendly Nerd: And also "The point that must be exceeded
to begin producing a given effect or result or to elicit a response".
This is the one that you want.;
#X text 13 344 Friendly Nerd: True.;
#X text 13 420 Friendly Nerd: I didn't choose my name \, as most people.
Stop diverting and take a look at this:;
#X text 13 790 Friendly Nerd: I know.;
#X text 13 5 Me: Hey Friendly Nerd \, what's a threads... ahm... thresh...
How do you pronounce this word anyway?;
#X text 14 374 Me: You are not very friendly. Why your name is Friendly
Nerd \, then?;
#X connect 0 0 7 0;
#X connect 3 0 7 1;
#X connect 4 0 5 1;
#X connect 5 0 8 0;
#X connect 5 1 10 0;
#X connect 7 0 9 0;
#X connect 7 1 5 0;
#X restore 104 348 pd low/up thresholder;
#N canvas 206 94 446 625 stream 0;
#X obj 12 425 spigot;
#X text 10 93 Me: Huh?;
#X text 10 173 Me: mmm...ye...mmm... do you want to hug me?;
#X obj 12 505 outlet state;
#X obj 12 335 inlet _0;
#X obj 232 335 inlet _1;
#X text 10 545 Me: Got it. Hug?;
#X msg 51 395 0;
#X msg 91 395 1;
#X obj 232 425 spigot;
#X msg 232 455 1;
#X msg 271 395 0;
#X msg 311 395 1;
#X msg 12 455 0;
#X obj 122 335 loadbang;
#X text 10 263 When there is information coming into inlet 0 the resulting
state will be 0 and when there is information coming into inlet 1 the
state will be 1 Really simple.;
#X text 10 53 Friendly Nerd: Good for you.;
#X text 10 133 Friendly Nerd: What? You also want a hug?;
#X text 9 213 Friendly Nerd: No \, but now that you know about boolean
logic I will show you something:;
#X text 10 585 Friendly Nerd: Don't push it.;
#X text 10 3 Me: Friendly Nerd \, I looked up in Google about the mathematician
George Boole and learned about boolean logic.;
#X connect 0 0 13 0;
#X connect 0 0 7 0;
#X connect 0 0 12 0;
#X connect 4 0 0 0;
#X connect 5 0 9 0;
#X connect 7 0 0 1;
#X connect 8 0 0 1;
#X connect 9 0 10 0;
#X connect 9 0 11 0;
#X connect 9 0 8 0;
#X connect 10 0 3 0;
#X connect 11 0 9 1;
#X connect 12 0 9 1;
#X connect 13 0 3 0;
#X connect 14 0 8 0;
#X connect 14 0 12 0;
#X restore 104 438 pd stream to boolean;
#X obj 281 348 rescaler;
#X text 344 348 <------------------>;
#X text 413 354 |;
#X text 370 381 abstractions \,;
#X text 360 396 not sub-patches.;
#X text 379 366 These are;
#X obj 491 348 rescaler;
#N canvas 855 22 516 686 inverter 0;
#X text -147 55 Me: Huh?;
#X text -147 105 when your mouse goes towards the top of the screen
but;
#X text -147 125 currently it does exaclty the opposite \, you just
need to;
#X text -147 145 sort of invert the values.;
#X obj -145 395 inlet original signal;
#X obj -30 565 outlet inverted signal;
#X text -147 265 Me: (sigh);
#X text -147 175 Me: Hmmm... I see. So should I apply some mathematical
;
#X text -147 195 trick?;
#X text -147 315 bunch of numbers that you want to 'invert'. We call
;
#X text -147 335 this 'the original signal'. Also you need to specify
the;
#X floatatom -135 445 5 0 0 0 - - -;
#X floatatom 204 445 5 0 0 0 - - -;
#X floatatom -10 515 5 0 0 0 - - -;
#X obj 194 395 inlet upper threshold;
#X obj 24 395 inlet lower threshold;
#X floatatom 34 445 5 0 0 0 - - -;
#X obj -30 485 expr $f3-$f1+$f2;
#X text -147 353 maximum and minimum values that these numbers will
reach.;
#X text -147 25 Friendly Nerd: Invert the direction of your vector.
;
#X text -147 85 Friendly Nerd: For example if you want a raise in pitch
;
#X text -147 225 Friendly Nerd: Yup.;
#X text -147 295 Friendly Nerd: It is not complicated. You just need
the;
#X text -137 635 Friendly Nerd: You owe me an ice cream.;
#X text 100 483 <-- mathematical trick :-);
#X text -137 605 Me: Whaw! the trick is really simple! Thanks \, Friendly
Nerd!;
#X connect 4 0 17 0;
#X connect 14 0 17 2;
#X connect 15 0 17 1;
#X connect 17 0 5 0;
#X restore 281 438 pd inverter;
#N canvas 1011 22 620 437 presets_didgesturadoo 0;
#X obj 28 24 inlet;
#X text 117 212 <-- wii roll low/up thresholder: min-thresh \, max-thresh
;
#X obj 68 177 s PS-k_p_rescaler;
#X obj 88 107 s PS-k_irx_rescaler;
#X obj 48 247 s PS-k_r-luthresh;
#X text 157 72 <-- wii IR x rescaler: in-min \, in-max \, out-min \,
out-max;
#X text 177 142 <-- wii pitch rescaler: in-min \, in-max \, out-min
\, out-max;
#X obj 28 317 s PS-k_x_y_z_rescaler;
#X text 137 282 <-- wii accel xyz rescaler: in-min \, in-max \, out-min
\, out-max;
#X msg 48 214 -60 60;
#X msg 88 74 0 1 -1 1;
#X text 187 302 HUOM! note that the 3rd value \, although theoretically
should be zero \, cannot be an actual zero as it will imply a division
by zero \, which is mathematically impossible. If you attempt a division
by zero the computer might explode. Just kidding. If you try to divide
by zero Puredata will just not execute the operation and will give
a warning.;
#X msg 68 144 130 0 76 57;
#X msg 28 284 0 80 0.01 1;
#X connect 0 0 12 0;
#X connect 0 0 10 0;
#X connect 0 0 9 0;
#X connect 0 0 13 0;
#X connect 9 0 4 0;
#X connect 10 0 3 0;
#X connect 12 0 2 0;
#X connect 13 0 7 0;
#X restore 545 107 pd presets_didgesturadoo;
#N canvas 182 515 744 273 PS-k_p-rescaler 0;
#X obj 556 214 outlet desired maximum;
#X obj 386 214 outlet desired minimum;
#X obj 207 214 outlet original maximum;
#X obj 28 214 outlet original minimum;
#X obj 323 146 unpack f f f f;
#X text 9 88 This subpatch receives presets values;
#X text 9 103 and distributes them.;
#X text 9 118 This way the parent patch looks tidier.;
#X obj 7 -3 cnv 15 192 82 empty empty empty 20 12 0 14 -191407 -66577
0;
#X obj 13 3 cnv 15 180 70 empty empty empty 20 12 0 14 -204800 -66577
0;
#X text 19 8 PRESETS CONNECTIONS;
#X text 19 48 presets for: rescaler;
#X obj 323 86 r PS-k_p_rescaler;
#X text 19 28 linked to control: k_p;
#X connect 4 0 3 0;
#X connect 4 1 2 0;
#X connect 4 2 1 0;
#X connect 4 3 0 0;
#X connect 12 0 4 0;
#X restore 294 308 pd PS-k_p-rescaler;
#N canvas 225 504 744 273 PS-k_irx-rescaler 0;
#X obj 556 214 outlet desired maximum;
#X obj 386 214 outlet desired minimum;
#X obj 207 214 outlet original maximum;
#X obj 28 214 outlet original minimum;
#X obj 323 146 unpack f f f f;
#X text 9 88 This subpatch receives presets values;
#X text 9 103 and distributes them.;
#X text 9 118 This way the parent patch looks tidier.;
#X obj 7 -3 cnv 15 192 82 empty empty empty 20 12 0 14 -191407 -66577
0;
#X obj 13 3 cnv 15 180 70 empty empty empty 20 12 0 14 -203904 -66577
0;
#X text 19 8 PRESETS CONNECTIONS;
#X text 19 48 presets for: rescaler;
#X text 19 28 linked to control: k_irx;
#X obj 323 86 r PS-k_irx_rescaler;
#X connect 4 0 3 0;
#X connect 4 1 2 0;
#X connect 4 2 1 0;
#X connect 4 3 0 0;
#X connect 13 0 4 0;
#X restore 504 308 pd PS-k_irx-rescaler;
#X obj 545 77 bng 15 250 50 0 empty empty empty 17 7 0 10 -257985 -1
-1;
#N canvas 337 660 744 273 PS-k_r-luthresh 0;
#X text 9 88 This subpatch receives presets values;
#X text 9 103 and distributes them.;
#X text 9 118 This way the parent patch looks tidier.;
#X obj 7 -3 cnv 15 242 82 empty empty empty 20 12 0 14 -191407 -66577
0;
#X obj 13 3 cnv 15 230 70 empty empty empty 20 12 0 14 -204786 -66577
0;
#X text 19 8 PRESETS CONNECTIONS;
#X text 19 48 presets for: low/up thresholder;
#X obj 323 146 unpack f f;
#X obj 211 214 outlet lower threshold;
#X obj 390 214 outlet upper threshold;
#X text 19 28 linked to control: k_r;
#X obj 323 86 r PS-k_r-luthresh;
#X connect 7 0 8 0;
#X connect 7 1 9 0;
#X connect 11 0 7 0;
#X restore 125 308 pd PS-k_r-luthresh;
#X obj 281 58 cnv 15 90 100 empty empty empty 20 12 0 14 -99865 -66577
0;
#X obj 285 63 cnv 15 82 92 empty empty empty 20 12 0 14 -203904 -66577
0;
#X obj 289 68 inlet irx;
#X obj 381 58 cnv 15 90 100 empty empty empty 20 12 0 14 -99865 -66577
0;
#X obj 385 63 cnv 15 82 92 empty empty empty 20 12 0 14 -232576 -66577
0;
#X obj 389 68 inlet iry;
#X obj 181 58 cnv 15 90 100 empty empty empty 20 12 0 14 -99865 -66577
0;
#X obj 185 63 cnv 15 82 92 empty empty empty 20 12 0 14 -204800 -66577
0;
#X obj 189 68 inlet p;
#X obj 81 58 cnv 15 90 100 empty empty empty 20 12 0 14 -99865 -66577
0;
#X obj 85 63 cnv 15 82 92 empty empty empty 20 12 0 14 -204786 -66577
0;
#X obj 89 68 inlet r;
#X obj -19 58 cnv 15 90 100 empty empty empty 20 12 0 14 -99865 -66577
0;
#X obj -15 63 cnv 15 82 92 empty empty empty 20 12 0 14 -262130 -66577
0;
#X obj -11 68 inlet z;
#X obj -119 58 cnv 15 90 100 empty empty empty 20 12 0 14 -99865 -66577
0;
#X obj -115 63 cnv 15 82 92 empty empty empty 20 12 0 14 -261682 -66577
0;
#X obj -111 68 inlet y;
#X obj -219 58 cnv 15 90 100 empty empty empty 20 12 0 14 -99865 -66577
0;
#X obj -215 63 cnv 15 82 92 empty empty empty 20 12 0 14 -261234 -66577
0;
#X obj -211 68 inlet x;
#X obj -209 196 cnv 15 67 26 empty empty empty 20 12 0 14 -99865 -66577
0;
#X obj -109 196 cnv 15 67 26 empty empty empty 20 12 0 14 -99865 -66577
0;
#X obj -9 196 cnv 15 67 26 empty empty empty 20 12 0 14 -99865 -66577
0;
#X obj -209 196 cnv 15 65 24 empty empty empty 20 12 0 14 -261234 -66577
0;
#X obj -109 196 cnv 15 65 24 empty empty empty 20 12 0 14 -261682 -66577
0;
#X obj -9 196 cnv 15 65 24 empty empty empty 20 12 0 14 -262130 -66577
0;
#X obj 91 196 cnv 15 67 26 empty empty empty 20 12 0 14 -99865 -66577
0;
#X obj 91 196 cnv 15 65 24 empty empty empty 20 12 0 14 -204786 -66577
0;
#X obj 268 196 cnv 15 67 26 empty empty empty 20 12 0 14 -99865 -66577
0;
#X obj 268 196 cnv 15 65 24 empty empty empty 20 12 0 14 -204800 -66577
0;
#X obj 478 196 cnv 15 81 26 empty empty empty 20 12 0 14 -99865 -66577
0;
#X obj 478 196 cnv 15 79 24 empty empty empty 20 12 0 14 -203904 -66577
0;
#X obj 648 196 cnv 15 81 26 empty empty empty 20 12 0 14 -99865 -66577
0;
#X obj 648 196 cnv 15 79 24 empty empty empty 20 12 0 14 -232576 -66577
0;
#X obj 104 506 select 1;
#X obj 104 536 tgl 50 0 empty empty empty 17 7 0 10 -1 -4034 -1 0 1
;
#X obj -96 438 rescaler;
#N canvas 182 515 744 273 PS-k_x_y_z-rescaler 0;
#X obj 556 214 outlet desired maximum;
#X obj 386 214 outlet desired minimum;
#X obj 207 214 outlet original maximum;
#X obj 28 214 outlet original minimum;
#X obj 323 146 unpack f f f f;
#X text 9 88 This subpatch receives presets values;
#X text 9 103 and distributes them.;
#X text 9 118 This way the parent patch looks tidier.;
#X obj 7 -3 cnv 15 207 82 empty empty empty 20 12 0 14 -191407 -66577
0;
#X obj 13 3 cnv 15 195 70 empty empty empty 20 12 0 14 -262144 -66577
0;
#X text 19 8 PRESETS CONNECTIONS;
#X text 19 48 presets for: rescaler;
#X text 19 28 linked to control: k_x_y_z;
#X obj 323 86 r PS-k_x_y_z_rescaler;
#X connect 4 0 3 0;
#X connect 4 1 2 0;
#X connect 4 2 1 0;
#X connect 4 3 0 0;
#X connect 13 0 4 0;
#X restore -83 388 pd PS-k_x_y_z-rescaler;
#X floatatom -1 99 5 0 0 0 - - -;
#X floatatom -101 99 5 0 0 0 - - -;
#X floatatom -201 99 5 0 0 0 - - -;
#X floatatom 114 388 5 0 0 0 - - -;
#X floatatom 161 388 5 0 0 0 - - -;
#X floatatom 209 388 5 0 0 0 - - -;
#N canvas 206 44 432 344 smoothie 0;
#X obj 13 149 inlet;
#X obj 13 289 outlet;
#X text 11 19 Me: Like a fruity protein drink?;
#X text 11 79 Me: Yeah... jerks should be eliminated.;
#X text 11 49 Friendly Nerd: No. Like a patch that eliminates the jerk.
;
#X text 11 109 Friendly Nerd: (sigh);
#X obj 13 248 int;
#X obj 13 216 smooth;
#X msg 52 186 0.1;
#X connect 0 0 7 0;
#X connect 6 0 1 0;
#X connect 7 0 6 0;
#X connect 8 0 7 1;
#X restore 104 258 pd smoothie;
#N canvas 206 44 432 344 smoothie 0;
#X obj 13 149 inlet;
#X obj 13 289 outlet;
#X text 11 19 Me: Like a fruity protein drink?;
#X text 11 79 Me: Yeah... jerks should be eliminated.;
#X text 11 49 Friendly Nerd: No. Like a patch that eliminates the jerk.
;
#X text 11 109 Friendly Nerd: (sigh);
#X obj 13 248 int;
#X obj 13 216 smooth;
#X msg 52 186 0.1;
#X connect 0 0 7 0;
#X connect 6 0 1 0;
#X connect 7 0 6 0;
#X connect 8 0 7 1;
#X restore 281 518 pd smoothie;
#X floatatom 291 468 5 0 0 0 - - -;
#X floatatom 399 99 5 0 0 0 - - -;
#X floatatom 118 470 5 0 0 0 - - -;
#X obj 268 597 cnv 15 95 26 empty empty empty 20 12 0 14 -1 -66577
0;
#X obj 268 596 cnv 15 93 24 empty empty empty 20 12 0 14 -191407 -66577
0;
#X obj -96 259 shake;
#N canvas 670 487 242 232 more 0;
#N canvas 296 22 461 568 upper 0;
#X obj -311 62 inlet original signal;
#X obj -311 162 moses;
#X obj -279 122 inlet threshold;
#X text -313 13 This will output the stream over the threshold and
a 0 if the values go under the threshold.;
#N canvas 206 94 446 625 stream 0;
#X obj 12 425 spigot;
#X text 10 93 Me: Huh?;
#X text 10 173 Me: mmm...ye...mmm... do you want to hug me?;
#X text 10 263 When there is information coming into inlet 0 the resulting
state will be 0 and when there is information coming into inlet 1 the
state will be 1 Really simple.;
#X obj 12 505 outlet state;
#X obj 12 335 inlet _0;
#X obj 232 335 inlet _1;
#X text 10 535 Me: Got it. Hug?;
#X msg 51 395 0;
#X msg 91 395 1;
#X obj 232 425 spigot;
#X msg 232 455 1;
#X msg 271 395 0;
#X msg 311 395 1;
#X msg 12 455 0;
#X obj 122 335 loadbang;
#X text 10 53 Friendly Nerd: Good for you.;
#X text 10 133 Friendly Nerd: What? You also want a hug?;
#X text 9 213 Friendly Nerd: No \, but now that you know about boolean
logic I will show you something:;
#X text 10 575 Friendly Nerd: Don't push it.;
#X text 10 3 Me: Friendly Nerd \, I looked up in Google about the mathematician
George Boole and learned about boolean logic.;
#X connect 0 0 14 0;
#X connect 0 0 8 0;
#X connect 0 0 13 0;
#X connect 5 0 0 0;
#X connect 6 0 10 0;
#X connect 8 0 0 1;
#X connect 9 0 0 1;
#X connect 10 0 11 0;
#X connect 10 0 12 0;
#X connect 10 0 9 0;
#X connect 11 0 4 0;
#X connect 12 0 10 1;
#X connect 13 0 10 1;
#X connect 14 0 4 0;
#X connect 15 0 9 0;
#X connect 15 0 13 0;
#X restore -311 222 pd stream to boolean;
#X obj -311 532 outlet;
#X obj -311 442 spigot;
#X obj -221 442 route 0;
#X msg -221 482 0;
#X floatatom -291 91 5 0 0 0 - - -;
#X text -164 222 <-- notice that this subpatch is recycled;
#X text -164 242 This means that there is an exact copy;
#X text -164 262 of it somewhere else in the parent patch.;
#X text -164 282 Yes... go ahead and find it !!!;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 1 1 4 1;
#X connect 1 1 6 0;
#X connect 2 0 1 1;
#X connect 4 0 6 1;
#X connect 4 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 8 0;
#X connect 8 0 5 0;
#X restore 14 19 pd upper threshold low naught;
#X restore 545 137 pd more tools;
#X obj 478 597 cnv 15 117 26 empty empty empty 20 12 0 14 -1 -66577
0;
#X obj 478 596 cnv 15 115 24 empty empty empty 20 12 0 14 -191407 -66577
0;
#X obj 91 597 cnv 15 102 26 empty empty empty 20 12 0 14 -1 -66577
0;
#X obj 91 596 cnv 15 100 24 empty empty empty 20 12 0 14 -191407 -66577
0;
#X obj -108 597 cnv 15 136 26 empty empty empty 20 12 0 14 -1 -66577
0;
#X obj -108 596 cnv 15 134 24 empty empty empty 20 12 0 14 -191407
-66577 0;
#X obj -108 657 cnv 15 136 26 empty empty empty 20 12 0 14 -162280
-66577 0;
#X obj -108 656 cnv 15 134 24 empty empty empty 20 12 0 14 -228856
-66577 0;
#X obj -211 128 s k_x;
#X obj -111 128 s k_y;
#X obj -11 128 s k_z;
#X obj 89 128 s k_r;
#X obj 189 128 s k_p;
#X obj 289 128 s k_irx;
#X obj 389 128 s k_iry;
#X obj -196 198 r k_x;
#X obj -96 198 r k_y;
#X obj 4 198 r k_z;
#X obj 104 198 r k_r;
#X obj 281 198 r k_p;
#X obj 491 198 r k_irx;
#X obj 661 198 r k_iry;
#X text -86 278 |;
#X text -86 278 ^;
#X text -86 287 |;
#X text -90 302 This is an;
#X text -90 317 abstraction \,;
#X text -90 332 not a sub-patch.;
#X obj -96 598 s k_granulation;
#X obj -96 658 r k_granulation;
#X obj 104 598 s k_looper;
#X obj 281 598 s k_pitch;
#X obj 491 598 s k_position;
#X obj 91 657 cnv 15 102 26 empty empty empty 20 12 0 14 -162280 -66577
0;
#X obj 91 656 cnv 15 100 24 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 268 657 cnv 15 95 26 empty empty empty 20 12 0 14 -162280 -66577
0;
#X obj 268 656 cnv 15 93 24 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 478 657 cnv 15 117 26 empty empty empty 20 12 0 14 -162280 -66577
0;
#X obj 478 656 cnv 15 115 24 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 104 658 r k_looper;
#X obj 281 658 r k_pitch;
#X obj 491 658 r k_position;
#X obj 648 597 cnv 15 137 26 empty empty empty 20 12 0 14 -1 -66577
0;
#X obj 648 596 cnv 15 135 24 empty empty empty 20 12 0 14 -191407 -66577
0;
#X text 619 628 --------------------------;
#X obj 648 657 cnv 15 137 26 empty empty empty 20 12 0 14 -162280 -66577
0;
#X obj 648 656 cnv 15 135 24 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 661 658 r k_filter freq;
#X obj 661 598 s k_filter freq;
#X text 619 168 --------------------------;
#X text -20 439 This is an;
#X text -20 454 abstraction \,;
#X text -20 469 not a sub-patch.;
#X text -36 439 <-;
#X text 423 444 |;
#X text 389 456 These are;
#X text 364 438 <--------------->;
#X text 392 471 recycled;
#X text 381 486 sub-patches.;
#X obj 545 47 loadbang;
#X floatatom 99 99 5 0 0 0 - - -;
#X floatatom 199 99 5 0 0 0 - - -;
#X obj -146 492 vsl 30 128 0.01 1 0 0 empty empty empty 0 -9 0 10 -1
-4032 -1 2397 1;
#X floatatom -83 467 5 0 0 0 - - -;
#X floatatom 291 548 5 0 0 0 - - -;
#X floatatom 299 99 5 0 0 0 - - -;
#N canvas 1134 39 442 718 wii_irx 0;
#X obj 7 200 inlet raw wii IR signal;
#X obj 7 680 outlet processed wii IR signal;
#X obj 27 290 moses 0.05;
#X msg 7 590 0;
#X obj 7 520 select 1;
#X obj 7 480 spigot;
#X msg 46 450 1;
#X msg 156 450 0;
#X text 4 9 The raw IR signal of the wiimote coming from DarwwinremoteOSC
ranges from 0 to 1 However \, if the wiimote points further than either
limit it will output 1 \, which would mess up things. Therefore a system
has been devised in this subpatch to prevent such a horrendous outcome.
;
#X obj 196 591 spigot;
#X msg 235 551 1;
#X msg 275 551 0;
#X obj 275 521 r \$0-wii_ir_lobound;
#X obj 17 550 r \$0-wii_ir_lobound;
#X obj 27 360 s \$0-wii_ir_lobound;
#X obj 46 410 r \$0-wii_ir_lobound;
#X obj 94 330 s \$0-wii_ir_upbound;
#X obj 196 410 r \$0-wii_ir_upbound;
#X obj 27 240 r \$0-wii_ir_test;
#X floatatom 196 644 5 0 0 0 - - -;
#X obj 254 114 cnv 15 170 280 empty empty empty 20 12 0 14 -233017
-66577 0;
#X obj 264 124 cnv 15 150 260 empty empty empty 20 12 0 14 -262144
-66577 0;
#X obj 273 160 hsl 64 15 0 1 0 1 empty empty empty -2 -8 0 10 -262144
-1 -1 3150 1;
#X text 342 157 <-- test;
#X floatatom 282 186 5 0 0 0 - - -;
#X obj 270 220 select 0;
#X msg 270 250 1;
#X obj 323 290 f;
#X floatatom 335 326 5 0 0 0 - - -;
#X obj 270 360 s \$0-wii_ir_test;
#X msg 270 130 0.5;
#X text 4 109 The testing part of this;
#X text 4 124 subpatch (inside the rectangle);
#X text 4 139 generates a signal mimicking the;
#X text 4 154 IR signal from the wiimote.;
#X connect 0 0 2 0;
#X connect 0 0 5 0;
#X connect 2 0 14 0;
#X connect 2 1 16 0;
#X connect 3 0 1 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 5 1;
#X connect 7 0 5 1;
#X connect 9 0 1 0;
#X connect 10 0 9 1;
#X connect 11 0 9 1;
#X connect 12 0 11 0;
#X connect 13 0 3 0;
#X connect 15 0 6 0;
#X connect 17 0 7 0;
#X connect 17 0 9 0;
#X connect 17 0 10 0;
#X connect 18 0 2 0;
#X connect 22 0 24 0;
#X connect 22 0 25 0;
#X connect 25 0 26 0;
#X connect 25 1 27 0;
#X connect 26 0 27 0;
#X connect 27 0 28 0;
#X connect 27 0 29 0;
#X connect 30 0 22 0;
#X restore 491 258 pd wii_irx;
#X obj 491 518 average 50;
#X floatatom 501 548 5 0 0 0 - - -;
#X connect 10 0 147 0;
#X connect 11 0 12 0;
#X connect 11 2 12 1;
#X connect 12 0 61 0;
#X connect 13 0 20 0;
#X connect 13 1 20 1;
#X connect 13 2 20 2;
#X connect 19 0 10 0;
#X connect 19 1 10 1;
#X connect 19 2 10 2;
#X connect 20 0 72 0;
#X connect 22 0 13 1;
#X connect 22 1 13 2;
#X connect 22 2 13 3;
#X connect 22 3 13 4;
#X connect 23 0 19 1;
#X connect 23 1 19 2;
#X connect 23 2 19 3;
#X connect 23 3 19 4;
#X connect 24 0 21 0;
#X connect 25 0 11 1;
#X connect 25 1 11 2;
#X connect 28 0 93 0;
#X connect 31 0 94 0;
#X connect 34 0 92 0;
#X connect 37 0 91 0;
#X connect 40 0 90 0;
#X connect 43 0 89 0;
#X connect 46 0 88 0;
#X connect 61 0 62 0;
#X connect 62 0 110 0;
#X connect 63 0 108 0;
#X connect 63 0 142 0;
#X connect 64 0 63 1;
#X connect 64 1 63 2;
#X connect 64 2 63 3;
#X connect 64 3 63 4;
#X connect 71 0 11 0;
#X connect 72 0 111 0;
#X connect 78 0 63 0;
#X connect 96 0 78 0;
#X connect 98 0 71 0;
#X connect 99 0 13 0;
#X connect 100 0 146 0;
#X connect 109 0 8 0;
#X connect 119 0 9 0;
#X connect 120 0 1 0;
#X connect 121 0 0 0;
#X connect 127 0 3 0;
#X connect 139 0 24 0;
#X connect 146 0 19 0;
#X connect 147 0 112 0;
#X restore -38 -68 pd _mapping_;
#N canvas 302 306 722 385 _control_ 0;
#N canvas 253 23 454 456 mouse 0;
#X obj -301 381 outlet x;
#X obj -64 381 outlet y;
#N canvas 445 43 494 647 cursor 0;
#X text -33 89 1) Ctrl-1 \, type "cursor" to put an object that gets
data from the mouse.;
#X obj -30 425 cursor;
#X msg -21 384 bang;
#X obj -30 499 route x y;
#X floatatom -12 559 5 0 0 0 x - -;
#X floatatom 86 559 5 0 0 1 y - -;
#X obj -30 359 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj -30 465 route motion mousewheel button;
#X text -9 356 turn on to get mouse motion and buttons;
#X text 32 385 or bang to get the current mouse position;
#X obj -30 599 outlet x;
#X obj 82 599 outlet y;
#X obj -30 319 inlet toggle;
#X text -33 179 Windows: right-click;
#X text -33 199 Mac: right-click or ctrl-click;
#X text -33 139 2) Open the help patch by clicking over the object
("cursor" in this case).;
#X text -33 239 3) Send the cursor output out of this subpatch using
the outlets at the bottom (x and y). You can figure out this with the
information given in the help patch.;
#X text -33 9 Getting mouse motion (position of the cursor in the screen)
using the object "cursor". This is known to not work in Pd 0.43 and
to work in Pd 0.42.;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 3 0 10 0;
#X connect 3 1 11 0;
#X connect 6 0 1 0;
#X connect 7 0 3 0;
#X connect 12 0 6 0;
#X restore -301 331 pd cursor;
#N canvas 332 22 568 712 receivecanvas 0;
#X floatatom 13 579 5 0 0 0 x - -;
#X floatatom 111 579 5 0 0 1 y - -;
#X obj -8 609 outlet x;
#X obj 104 609 outlet y;
#X obj 127 419 inlet toggle;
#X text -43 179 Windows: right-click;
#X text -43 199 Mac: right-click or ctrl-click;
#X text -43 139 2) Open the help patch by clicking over the object
("cursor" in this case).;
#X text -43 89 1) Ctrl-1 \, type "receivecanvas" to put an object that
gets data from the mouse.;
#X obj -40 529 unpack s f f f;
#X text -43 359 3) Send the cursor output out of this subpatch using
the outlets at the bottom (x and y).;
#X text -43 219 The help file for "receivecanvas" is not very useful
as it does not explain how to isolate the output values of the object.
You can do that using the object "unpack".;
#X text -43 279 "receivecanvas" does not have a built-in on/off option.
;
#X text -43 299 To accomplish this you can place a "spigot" object
between;
#X text -43 319 the "receivecanvas" and "unpack" objects.;
#X obj -40 489 spigot;
#X obj 127 459 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj -40 419 receivecanvas 4;
#X text -43 9 Getting mouse motion (position of the cursor in the screen)
using the object "receivecanvas". This is known to work in Pd 0.43
and to not work in Pd 0.42.;
#X connect 4 0 16 0;
#X connect 9 1 0 0;
#X connect 9 1 2 0;
#X connect 9 2 1 0;
#X connect 9 2 3 0;
#X connect 15 0 9 0;
#X connect 16 0 15 1;
#X connect 17 0 15 0;
#X restore -173 331 pd receivecanvas;
#X text -293 301 Approach 1:;
#X text -165 301 Approach 2:;
#X obj -301 221 inlet toggle;
#X text -190 239 the mouse data on/off;
#X text -190 259 from the containing subpatch;
#X text -303 39 Here we have two approaches to get the position of
the;
#X text -303 59 mouse. Each approach uses a different object.;
#X text -303 79 Find out which one works in the version of Puredata
that;
#X text -303 99 you are using. They might not work exactly the same
\, so pay;
#X text -303 119 attention to how they work. Open the subpatches \,
figure out;
#X text -303 139 how the different approaches work and finally route
the;
#X text -303 159 mouse position data to outlets x and y.;
#X text -190 219 <-- this inlet allows to switch;
#X text -303 9 -- GETTING DATA FROM THE MOUSE --;
#X obj -221 420 s direct_mouse_x;
#X obj -92 420 s direct_mouse_y;
#X connect 2 0 0 0;
#X connect 2 0 18 0;
#X connect 2 1 1 0;
#X connect 2 1 19 0;
#X connect 3 0 0 0;
#X connect 3 1 1 0;
#X connect 6 0 2 0;
#X restore -194 119 pd mouse;
#X obj -108 268 outlet y;
#X obj -22 268 outlet z;
#X obj 84 268 outlet r;
#X obj 180 268 outlet p;
#X obj -194 89 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 285 268 outlet irx;
#X obj 397 268 outlet iry;
#X obj -194 268 outlet x;
#X obj -63 89 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text -197 -45 Since Puredata is a community effort there are many
objects;
#X text -197 -25 around and not all of them work on all versions of
Pd. For;
#X text -197 -5 example \, some of them might work in an earlier version
or;
#X text -197 15 in the version for a different operating system (e.g.
;
#N canvas 101 63 735 602 wiimote 0;
#X obj -234 500 outlet x;
#X obj -154 500 outlet y;
#X obj -62 500 outlet z;
#X obj 34 500 outlet r;
#X obj 130 500 outlet p;
#X obj 225 500 outlet irx;
#X obj 320 500 outlet iry;
#X obj -195 160 inlet toggle;
#X obj -234 240 unpackOSC;
#X obj -234 130 udpreceive 5600;
#X obj -234 270 routeOSC /wii;
#X obj -234 430 unpack f f f;
#X obj 225 430 unpack f f;
#X obj 34 430 unpack f f;
#X obj -234 310 routeOSC /acc /orientation /irdata;
#X obj -234 210 spigot;
#X obj -195 190 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X text 408 550 middle;
#X text 408 500 RANGE:;
#X text -142 530 250;
#X text -142 550 125;
#X text -142 570 0;
#X text 35 530 right 100;
#X text 35 570 left -83;
#X text -235 0 -- GETTING DATA FROM THE WIIMOTE VIA OPEN SOUND CONTROL
--;
#X text -234 30 The method here requires an external software that
captures the data from the wiimote \, converts it to an OSC stream
and then send it through a network port. For Macintosh I recommend
Darwiinremote OSC \, shich is free. Also Osculator is good and not
very expensive.;
#X text -94 130 <-- This thing receives data through a network port.
The number of the port has four digits and has to be set to match the
sending entity. In this case the sending entity is an external software
that receives wiimote data from the bluetooth antenna of the computer
and converts it to OSC data.;
#X text 35 550 horiz. 8;
#X text 129 550 horiz. 0;
#X text 129 530 down 90;
#X text 129 570 up -90;
#X text 306 530 1;
#X text 299 550 0.5;
#X text 306 570 0;
#X text 242 530 right;
#X text 339 530 up;
#X text 242 570 left;
#X text 241 550 center;
#X text 339 550 center;
#X text 339 570 down;
#X text 408 530 upper lim.;
#X text 408 570 lower lim.;
#X floatatom -224 470 5 0 0 0 - - -;
#X floatatom -52 470 5 0 0 0 - - -;
#X floatatom -144 470 5 0 0 0 - - -;
#X floatatom 44 470 5 0 0 0 - - -;
#X floatatom 140 470 5 0 0 0 - - -;
#X floatatom 235 470 5 0 0 0 - - -;
#X floatatom 330 470 5 0 0 0 - - -;
#X obj 34 360 unpack f f;
#X obj 101 391 s direct_wii_p;
#X floatatom 201 342 5 0 0 0 - - -;
#X obj -6 271 print;
#X connect 7 0 16 0;
#X connect 8 0 50 0;
#X connect 9 0 15 0;
#X connect 10 0 14 0;
#X connect 11 0 0 0;
#X connect 11 1 1 0;
#X connect 11 2 2 0;
#X connect 12 0 5 0;
#X connect 12 1 6 0;
#X connect 13 0 3 0;
#X connect 13 1 4 0;
#X connect 15 0 8 0;
#X connect 16 0 15 1;
#X connect 49 1 50 0;
#X connect 49 1 51 0;
#X restore -63 119 pd wiimote via OSC;
#X obj 358 89 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text -197 -75 GETTING CONTROL DATA FROM A DEVICE;
#N canvas 145 249 591 574 HID 0;
#X obj -204 248 hid;
#X obj -204 108 inlet toggle;
#X obj -204 138 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj -138 498 outlet y;
#X obj -72 498 outlet z;
#X obj -6 498 outlet r;
#X obj 60 498 outlet p;
#X obj 125 498 outlet irx;
#X obj 210 498 outlet iry;
#X obj -204 498 outlet x;
#X msg -184 158 open mouse;
#X obj -204 328 route rel_x rel_y rel_z rel_wheel;
#X text -78 156 <-- with this you will get the acceleration of the
mouse \, not the position.;
#X floatatom -194 358 5 0 0 0 - - -;
#X floatatom -137 358 5 0 0 0 - - -;
#X floatatom -80 358 5 0 0 0 - - -;
#X floatatom -23 358 5 0 0 0 - - -;
#X floatatom 35 358 5 0 0 0 - - -;
#X msg -184 208 open keyboard;
#X text -78 206 <-- get the key that you press on the keyboard;
#X floatatom 189 358 12 0 0 1 value - -;
#X symbolatom 148 384 15 0 0 1 event_code - -;
#X symbolatom 108 410 15 0 0 1 event_type - -;
#X obj 108 328 unpack s s f;
#X text 123 308 keyboard;
#X text -106 308 mouse;
#X text -205 0 -- GETTING DATA FROM A HUMAN INTERACTION DEVICE --;
#X text -204 30 This method utilizes the HID object. Arguably can take
data from many sources such as mouse \, keyboard \, USB devices \,
etc. It is a bit tricky to use.;
#X connect 0 0 11 0;
#X connect 0 0 23 0;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 10 0 0 0;
#X connect 11 0 13 0;
#X connect 11 0 9 0;
#X connect 11 1 14 0;
#X connect 11 1 3 0;
#X connect 11 2 15 0;
#X connect 11 3 16 0;
#X connect 11 4 17 0;
#X connect 18 0 0 0;
#X connect 23 0 22 0;
#X connect 23 1 21 0;
#X connect 23 2 20 0;
#X restore 358 119 pd HID;
#X obj 128 89 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#N canvas 145 249 513 299 alphanumeric 0;
#X obj -165 88 inlet toggle;
#X obj -165 118 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj -138 248 outlet y;
#X obj -72 248 outlet z;
#X obj -6 248 outlet r;
#X obj 60 248 outlet p;
#X obj 125 248 outlet irx;
#X obj 210 248 outlet iry;
#X obj -204 248 outlet x;
#X text -205 0 -- GETTING DATA FROM THE COMPUTER'S ALPHANUMERIC KEYBOARD
--;
#X obj -204 88 key;
#X text -204 30 This method utilizes the "key" object. Supersimple.
;
#X obj -204 158 spigot;
#X floatatom -194 188 5 0 0 0 - - -;
#X connect 0 0 1 0;
#X connect 1 0 12 1;
#X connect 10 0 12 0;
#X connect 12 0 13 0;
#X restore 128 119 pd alphanumeric keyboard;
#X text -197 35 Linux \, Mac \, Windows). Here we have options:;
#X text 414 119 <-- controllers;
#X text 414 85 <-- on/off;
#X connect 0 0 8 0;
#X connect 0 1 1 0;
#X connect 5 0 0 0;
#X connect 9 0 14 0;
#X connect 14 0 8 0;
#X connect 14 1 1 0;
#X connect 14 2 2 0;
#X connect 14 3 3 0;
#X connect 14 4 4 0;
#X connect 14 5 6 0;
#X connect 14 6 7 0;
#X connect 15 0 17 0;
#X connect 17 0 8 0;
#X connect 17 1 1 0;
#X connect 17 2 2 0;
#X connect 17 3 3 0;
#X connect 17 4 4 0;
#X connect 17 5 6 0;
#X connect 17 6 7 0;
#X connect 18 0 19 0;
#X restore -38 -128 pd _control_;
#N canvas 92 210 704 245 __output_ 0;
#X obj 255 43 inlet pitch;
#X obj 355 43 inlet position;
#X text -43 -3 ------------------------------------------------------------
;
#X text -43 7 PARAMETERS INPUT:;
#X obj 465 43 inlet filter_freq;
#X obj -35 43 inlet granulation;
#X obj 105 43 inlet looper on/off;
#X floatatom 475 73 5 0 0 0 - - -;
#X floatatom 115 73 5 0 0 0 - - -;
#X floatatom 365 73 5 0 0 0 - - -;
#X floatatom 265 73 5 0 0 0 - - -;
#X floatatom -25 73 5 0 0 0 - - -;
#X obj 355 103 s s_position;
#X obj 255 103 s s_pitch;
#X obj 465 103 s s_filter_freq;
#X obj 105 103 s s_looper;
#X obj -35 103 s s_granulation;
#X text 378 -3 ---------------------------------------;
#N canvas 0 22 437 356 sound_generation 0;
#X text 187 312 (outputs) 1 and 2;
#X text 3 -1 ------------------------------------------------------------
;
#X text 3 189 ------------------------------------------------------------
;
#X text 3 9 PRIMARY SOUND GENERATION/INPUT:;
#X text 3 199 SOUND MODIFICATION AND OUTPUT:;
#N canvas 93 330 712 561 sound 0;
#N canvas 51 219 783 684 simple-pitchshift 0;
#X obj 113 280 loadbang;
#N canvas 334 82 868 501 shift 0;
#X floatatom 230 78 0 0 0 0 - - -;
#X obj 281 343 *~;
#X obj 428 283 line~;
#X floatatom 464 100 0 0 0 0 - - -;
#X text 77 9 PITCH SHIFTER;
#X obj 428 257 pack 0 200;
#X obj 218 131 exp;
#X floatatom 230 159 6 0 0 0 - - -;
#X obj 218 247 /;
#X obj 360 177 * 0.001;
#X obj 549 353 line~;
#X obj 549 328 pack 0 200;
#X obj 627 380 +~;
#X obj 218 398 cos~;
#X obj 218 425 *~;
#X obj 218 454 +~;
#X obj 315 305 wrap~;
#X obj 479 348 *~;
#X obj 581 383 +~;
#X obj 408 408 cos~;
#X obj 408 435 *~;
#X obj 360 204 t b f;
#X floatatom 218 273 6 0 0 0 - - -;
#X obj 315 278 +~ 0.5;
#X obj 218 346 -~ 0.5;
#X obj 218 372 *~ 0.5;
#X obj 408 347 -~ 0.5;
#X obj 408 380 *~ 0.5;
#X obj 218 184 - 1;
#X obj 218 105 * 0.05776;
#X obj 218 210 * -1;
#X text 257 74 <-- transposition;
#X text 305 87 (halftones);
#X text 288 151 speed;
#X text 288 165 change;
#X text 513 99 <--window (msec);
#X text 257 240 tape head;
#X obj 218 304 phasor~;
#X obj 549 304 max 1.5;
#X text 554 210 delay;
#X text 549 228 (msec);
#X obj 464 127 max 1;
#X text 258 253 rotation freq;
#X obj 281 399 vd~ \$1-pshift;
#X obj 479 410 vd~ \$1-pshift;
#X obj -40 88 delwrite~ \$1-pshift 5000;
#X obj 218 49 inlet transpose;
#X obj 464 74 inlet window;
#X obj 549 251 inlet delay;
#X obj -40 57 inlet~;
#X obj 218 482 outlet~;
#N canvas 0 22 462 312 bpmtoms 0;
#X obj 113 101 inlet;
#X obj 116 214 outlet;
#X obj 113 158 expr (60/$f1)*1000;
#X floatatom 180 105 5 0 0 0 - - -;
#X floatatom 189 218 5 0 0 0 - - -;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X restore 671 296 pd bpmtoms;
#X obj 671 329 s \$1-pshrbpm;
#X connect 1 0 43 0;
#X connect 2 0 1 1;
#X connect 2 0 17 1;
#X connect 3 0 41 0;
#X connect 5 0 2 0;
#X connect 6 0 28 0;
#X connect 8 0 22 0;
#X connect 9 0 21 0;
#X connect 10 0 12 1;
#X connect 10 0 18 1;
#X connect 11 0 10 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 15 0 50 0;
#X connect 16 0 17 0;
#X connect 16 0 26 0;
#X connect 17 0 44 0;
#X connect 19 0 20 0;
#X connect 20 0 15 1;
#X connect 21 0 8 0;
#X connect 21 1 8 1;
#X connect 22 0 37 0;
#X connect 23 0 16 0;
#X connect 24 0 25 0;
#X connect 25 0 13 0;
#X connect 26 0 27 0;
#X connect 27 0 19 0;
#X connect 28 0 30 0;
#X connect 29 0 6 0;
#X connect 30 0 8 0;
#X connect 37 0 1 0;
#X connect 37 0 24 0;
#X connect 37 0 23 0;
#X connect 38 0 11 0;
#X connect 41 0 9 0;
#X connect 41 0 5 0;
#X connect 43 0 14 1;
#X connect 44 0 20 1;
#X connect 46 0 29 0;
#X connect 47 0 3 0;
#X connect 48 0 38 0;
#X connect 48 0 51 0;
#X connect 49 0 45 0;
#X connect 51 0 52 0;
#X restore 42 335 pd shift;
#X text 111 424 based on G09.pitchshift.pd by Miller Puckette;
#X obj 42 295 inlet~;
#X obj 41 376 outlet~;
#X obj 357 260 vsl 15 128 0 100 0 0 \$1-pshswin \$1-pshrwin window
0 -9 0 10 -262144 -1 -1 0 1;
#X obj 378 331 r \$1-pshswin;
#X obj 288 58 inlet pitch;
#X obj 500 362 s \$1-pshrdel;
#X obj 296 160 s \$1-pshrp;
#X msg 99 309 100;
#X obj 501 319 * 7.874;
#N canvas 392 22 546 423 printallreceives 0;
#X obj 41 63 f \$1;
#X obj 38 6 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 80 173 t f f f f f f f f f;
#X obj 41 87 t f f;
#X obj 188 21 r \$1-pshprintreceives;
#X obj 179 131 print start;
#X obj 56 370 print end;
#X msg 174 84 names of receives in [simple-pitchshift \$1]...................>>
;
#X msg 38 302 <<.........................................[simple-pitchshift
\$1];
#X obj 12 21 r printreceives;
#X obj 252 236 print pitch[-64-64];
#X msg 248 210 \$1-pshrp;
#X msg 122 237 \$1-pshrdel;
#X obj 129 272 print delay[0-1000];
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 8 0;
#X connect 2 7 12 0;
#X connect 2 8 11 0;
#X connect 3 0 2 0;
#X connect 3 1 7 0;
#X connect 4 0 0 0;
#X connect 7 0 5 0;
#X connect 8 0 6 0;
#X connect 9 0 0 0;
#X connect 11 0 10 0;
#X connect 12 0 13 0;
#X restore 39 497 pd printallreceives;
#N canvas 792 487 425 161 \$1-simple-pitchshiftextra 0;
#X obj 9 72 bng 15 250 50 0 printreceives empty print_all_receives
17 7 0 10 -262144 -1 -1;
#X obj 9 13 bng 15 250 50 0 \$1-pshprintreceives empty print_names_of_receives
17 7 0 10 -262144 -1 -1;
#X text 75 91 (of all objects in open files);
#X text 74 32 (of this 'simple-pitchshift' object);
#X restore 54 563 pd \$1-simple-pitchshiftextra;
#X obj 327 506 f \$1;
#X obj 327 557 symbol;
#X msg 327 582 \; \$1 vis 1;
#X obj 324 483 r \$1-pshsextraoptions;
#X msg 329 531 pd-\$1-simple-pitchshiftextra;
#N canvas 744 585 566 199 needsound 0;
#X obj 26 34 r soundfileyesno;
#X msg 21 67 0;
#X obj 26 138 s answersoundfile;
#X text 72 65 0 = this abunch object doesn't need a sound file (store
in a preset file) \, 1 = it does;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 41 531 pd needsound;
#N canvas 0 22 450 300 init-presets 0;
#X obj 63 48 loadbang;
#X obj 135 74 r \$1-pshsp;
#X obj 242 76 r \$1-pshsdel;
#N canvas 134 181 986 626 save_preset_array 0;
#X obj 23 403 inlet gui1;
#X obj 126 405 inlet gui2;
#X obj 222 403 inlet gui3;
#X obj 327 405 inlet gui4;
#X obj 423 406 inlet gui15;
#X obj 528 408 inlet gui6;
#X obj 624 406 inlet gui7;
#X obj 729 408 inlet gui8;
#X obj 824 408 inlet gui9;
#X obj 929 410 inlet gui10;
#X obj 837 446 f;
#X obj 927 448 f;
#X obj 638 443 f;
#X obj 729 445 f;
#X obj 428 439 f;
#X obj 519 441 f;
#X obj 230 438 f;
#X obj 321 440 f;
#X obj 29 443 f;
#X obj 120 445 f;
#X obj 95 109 until;
#X obj 71 173 + 1;
#X obj 101 142 f 0;
#X obj 90 42 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 68 332 select 1 2 3 4 5 6 7 8 9 10;
#X obj 644 505 r openpreset;
#X obj 183 18 r savepreset;
#X obj 24 825 outlet gui1;
#X obj 126 827 outlet gui2;
#X obj 227 827 outlet gui3;
#X obj 330 827 outlet gui4;
#X obj 536 827 outlet gui6;
#X obj 432 827 outlet gui5;
#X obj 639 827 outlet gui7;
#X obj 741 827 outlet gui8;
#X obj 842 827 outlet gui9;
#X obj 945 826 outlet gui10;
#X obj 558 598 until;
#X obj 531 657 + 1;
#X obj 563 626 f 0;
#N canvas 52 160 1048 298 router_1inxout 0;
#X obj 261 27 inlet one;
#X obj 383 23 inlet route123;
#X obj 41 211 outlet one;
#X obj 140 210 outlet two;
#X obj 246 211 outlet three;
#X obj 365 211 outlet four;
#X obj 468 210 outlet five;
#X obj 575 211 outlet six;
#X obj 675 210 outlet seven;
#X obj 788 213 outlet eigth;
#X obj 906 212 outlet nine;
#X obj 1010 211 outlet ten;
#X obj 405 124 route 1 2 3 4 5 6 7 8 9 10;
#X obj 407 83 pack;
#X obj 333 57 mod 12;
#X connect 0 0 14 0;
#X connect 1 0 13 1;
#X connect 12 0 2 0;
#X connect 12 1 3 0;
#X connect 12 2 4 0;
#X connect 12 3 5 0;
#X connect 12 4 6 0;
#X connect 12 5 7 0;
#X connect 12 6 8 0;
#X connect 12 7 9 0;
#X connect 12 8 10 0;
#X connect 12 9 11 0;
#X connect 13 0 12 0;
#X connect 14 0 13 0;
#X restore 518 776 pd router_1inxout;
#X obj 239 106 f 0;
#X obj 378 24 r presetnr;
#X obj 378 49 * 12;
#X obj 377 72 - 12;
#X obj 662 587 f 0;
#X obj 558 685 t f f;
#X obj 96 201 t f f;
#X obj 828 509 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$1-pshpreset 240 float 2;
#X coords 0 200 239 -1 200 140 1;
#X restore 666 131 graph;
#X obj 75 240 mod 12;
#X text 435 60 -> !!! per 12;
#X text 147 240 -> !!! per 12;
#X text 689 775 -> !!! hierin ook per 12;
#X msg 150 82 12;
#X text 197 83 -> !!! per 12;
#X text 653 54 max 12 parameters/waarden voor array/presets;
#X obj 341 204 symbol;
#X obj 455 183 symbol;
#X obj 389 245 pack s s;
#X obj 453 153 r namepreset;
#X obj 332 155 f \$1;
#X obj 189 43 t b b b;
#X obj 642 546 t b b b;
#X text 147 312 -> !!! per 12;
#X obj 806 628 symbol;
#X obj 851 655 pack s s;
#X obj 932 582 r namepreset;
#X obj 746 578 f \$1;
#X obj 171 163 print bng;
#X obj 923 618 symbol;
#X msg 360 272 \; \$1 write presets/\$2-\$1.txt;
#X msg 845 686 \; \$1 read presets/\$2-\$1.txt;
#X msg 330 182 \$1-pshpreset;
#X obj 293 552 tabwrite \$1-pshpreset;
#X obj 506 736 tabread \$1-pshpreset;
#X msg 761 604 \$1-pshpreset;
#X msg 594 575 12;
#X connect 0 0 18 1;
#X connect 1 0 19 1;
#X connect 2 0 16 1;
#X connect 3 0 17 1;
#X connect 4 0 14 1;
#X connect 5 0 15 1;
#X connect 6 0 12 1;
#X connect 7 0 13 1;
#X connect 8 0 10 1;
#X connect 9 0 11 1;
#X connect 10 0 74 0;
#X connect 11 0 74 0;
#X connect 12 0 74 0;
#X connect 13 0 74 0;
#X connect 14 0 74 0;
#X connect 15 0 74 0;
#X connect 16 0 74 0;
#X connect 17 0 74 0;
#X connect 18 0 74 0;
#X connect 19 0 74 0;
#X connect 20 0 22 0;
#X connect 21 0 22 1;
#X connect 21 0 47 0;
#X connect 22 0 21 0;
#X connect 23 0 20 0;
#X connect 24 0 18 0;
#X connect 24 1 19 0;
#X connect 24 2 16 0;
#X connect 24 3 17 0;
#X connect 25 0 63 0;
#X connect 26 0 62 0;
#X connect 37 0 39 0;
#X connect 38 0 39 1;
#X connect 38 0 46 0;
#X connect 39 0 38 0;
#X connect 40 0 27 0;
#X connect 40 1 28 0;
#X connect 40 2 29 0;
#X connect 40 3 30 0;
#X connect 41 0 22 1;
#X connect 42 0 43 0;
#X connect 43 0 44 0;
#X connect 44 0 41 1;
#X connect 44 0 45 1;
#X connect 45 0 39 1;
#X connect 46 0 40 0;
#X connect 46 1 75 0;
#X connect 47 0 50 0;
#X connect 47 1 74 1;
#X connect 48 0 63 0;
#X connect 50 0 24 0;
#X connect 54 0 20 0;
#X connect 57 0 59 0;
#X connect 58 0 59 1;
#X connect 59 0 71 0;
#X connect 60 0 58 0;
#X connect 61 0 73 0;
#X connect 62 0 61 0;
#X connect 62 0 69 0;
#X connect 62 1 54 0;
#X connect 62 2 41 0;
#X connect 63 0 77 0;
#X connect 63 1 45 0;
#X connect 63 2 68 0;
#X connect 65 0 66 0;
#X connect 66 0 72 0;
#X connect 67 0 70 0;
#X connect 68 0 76 0;
#X connect 70 0 66 1;
#X connect 73 0 57 0;
#X connect 75 0 40 1;
#X connect 76 0 65 0;
#X connect 77 0 37 0;
#X restore 162 142 pd save_preset_array;
#X obj 221 172 s \$1-pshrdel;
#X obj 120 175 s \$1-pshrp;
#X msg 104 135 0;
#X connect 0 0 6 0;
#X connect 1 0 3 0;
#X connect 2 0 3 1;
#X connect 3 0 5 0;
#X connect 3 1 4 0;
#X connect 6 0 5 0;
#X connect 6 0 4 0;
#X restore 176 366 pd init-presets;
#X obj 6 3 cnv 15 200 220 empty empty empty 50 12 0 10 -258699 -143491
0;
#X obj 78 37 vsl 15 128 -64 63 0 0 \$1-pshsp \$1-pshrp pitch -10 -9
0 10 -262144 -1 -1 6400 1;
#X obj 684 40 vsl 15 128 0 1000 0 0 \$1-pshsdel \$1-pshrdel delay -10
-9 0 10 -262144 -1 -1 0 1;
#X obj 50 200 bng 10 250 50 0 \$1-pshsextraoptions empty extra_options
17 5 0 8 -262144 -1 -1;
#X obj 681 188 nbx 5 14 -1e+37 1e+37 0 0 roer \$1-pshrbpm bpm 58 8
0 10 -86277 -260097 -86277 0 256;
#X obj 683 172 nbx 5 14 -1e+37 1e+37 0 0 ro or ms 58 8 0 10 -86277
-260097 -86277 0 256;
#X obj 69 169 nbx 5 14 -1e+37 1e+37 0 0 ro or empty 58 8 0 10 -86277
-260097 -86277 0 256;
#X obj 149 308 r \$1-pshsdel;
#N canvas 740 84 275 166 printname 0;
#X obj 62 33 r printallnames;
#X obj 62 87 symbol;
#X obj 62 112 s rallnames;
#X msg 62 62 simple-pitchshift;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 3 0 1 0;
#X restore 60 595 pd printname;
#X obj 66 248 r \$1-pshsp;
#X obj 285 89 - 64;
#N canvas 645 227 588 284 presetsnew 0;
#X obj 237 58 r savepresetn;
#X obj 230 119 t b b b;
#N canvas 146 124 1041 404 name-sends-normal 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$1-pshbetween 12 float 2;
#X coords 0 10000 12 -10000 20 20 1;
#X restore 18 236 graph;
#X obj 425 298 tabwrite \$1-pshbetween;
#X obj 494 235 unpack f f;
#X obj 111 156 pack f 1;
#X obj 153 178 pack f 2;
#X obj 210 200 pack f 3;
#X obj 266 155 pack f 4;
#X obj 308 177 pack f 5;
#X obj 365 199 pack f 6;
#X obj 414 156 pack f 7;
#X obj 456 178 pack f 8;
#X obj 506 199 pack f 9;
#X obj 572 156 pack f 10;
#X obj 614 178 pack f 11;
#X obj 671 199 pack f 12;
#X obj 749 156 pack f 13;
#X obj 791 178 pack f 14;
#X obj 849 201 pack f 15;
#X obj 899 156 pack f 16;
#X obj 941 179 pack f 17;
#X obj 995 203 pack f 18;
#X text 44 238 -> adjust size if necessary (standard size = 109);
#X obj 86 50 r \$1-pshsp;
#X obj 117 75 r \$1-pshsdel;
#X connect 2 0 1 0;
#X connect 2 1 1 1;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 2 0;
#X connect 7 0 2 0;
#X connect 8 0 2 0;
#X connect 9 0 2 0;
#X connect 10 0 2 0;
#X connect 11 0 2 0;
#X connect 12 0 2 0;
#X connect 13 0 2 0;
#X connect 14 0 2 0;
#X connect 15 0 2 0;
#X connect 16 0 2 0;
#X connect 17 0 2 0;
#X connect 18 0 2 0;
#X connect 19 0 2 0;
#X connect 20 0 2 0;
#X connect 22 0 3 0;
#X connect 23 0 4 0;
#X restore 86 27 pd name-sends-normal;
#X obj 252 196 s toextfile;
#N canvas 636 185 560 404 normal 0;
#X obj 314 134 f \$1;
#X obj 267 278 symbol;
#X obj 48 268 list prepend add2;
#X obj 48 293 list trim;
#X obj 212 51 t b b b b b;
#X obj 174 135 f 0;
#X obj 218 135 + 1;
#X msg 204 103 0;
#X msg 270 196 pshrx\$1;
#X obj 267 222 pack s f;
#X msg 267 249 \$2-\$1;
#X obj 149 102 until;
#X obj 218 161 t f f;
#X obj 24 193 tabread \$1-pshbetween;
#X text 171 77 -> aanpassen! aantal op te slagen floats;
#X obj 203 16 inlet;
#X obj 258 345 outlet;
#X msg 266 311 add2 () norm 0 0 \$1;
#X obj 126 76 f 2;
#X connect 0 0 9 1;
#X connect 1 0 17 0;
#X connect 2 0 3 0;
#X connect 3 0 16 0;
#X connect 4 3 18 0;
#X connect 4 4 0 0;
#X connect 4 4 7 0;
#X connect 5 0 6 0;
#X connect 6 0 5 1;
#X connect 6 0 12 0;
#X connect 7 0 5 1;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 1 0;
#X connect 11 0 5 0;
#X connect 12 0 13 0;
#X connect 12 1 8 0;
#X connect 13 0 2 0;
#X connect 15 0 4 0;
#X connect 17 0 16 0;
#X connect 18 0 11 0;
#X restore 245 153 pd normal;
#X text 203 152 !!->;
#X text 239 245 !!->;
#N canvas 77 22 1083 297 receive-normal 0;
#X obj 27 26 r \$1-pshrx1;
#X obj 62 46 r \$1-pshrx2;
#X obj 96 66 r \$1-pshrx3;
#X obj 221 19 r \$1-pshrx4;
#X obj 255 39 r \$1-pshrx5;
#X obj 290 59 r \$1-pshrx6;
#X obj 410 16 r \$1-pshrx7;
#X obj 431 37 r \$1-pshrx8;
#X obj 468 58 r \$1-pshrx9;
#X obj 590 33 r \$1-pshrx10;
#X obj 623 53 r \$1-pshrx11;
#X obj 657 73 r \$1-pshrx12;
#X obj 792 33 r \$1-pshrx13;
#X obj 825 53 r \$1-pshrx14;
#X obj 860 73 r \$1-pshrx15;
#X obj 972 33 r \$1-pshrx16;
#X obj 1005 53 r \$1-pshrx17;
#X obj 1040 73 r \$1-pshrx18;
#X text 752 236 ^ hier aanvullen ^;
#N canvas 30 22 246 218 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 26 90 pd cmp;
#N canvas 355 32 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 48 115 pd cmp;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 68 143 pd cmp;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 194 90 pd cmp;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 216 115 pd cmp;
#N canvas 308 22 246 215 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 236 143 pd cmp;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 408 80 pd cmp;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 431 105 pd cmp;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 450 133 pd cmp;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 611 110 pd cmp;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 633 135 pd cmp;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 653 163 pd cmp;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 779 110 pd cmp;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 801 135 pd cmp;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 821 163 pd cmp;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 993 100 pd cmp;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 1016 125 pd cmp;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 125 30 r \$1-psharg2;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 1035 153 pd cmp;
#X obj 71 247 s \$1-pshrdel;
#X obj 41 209 s \$1-pshrp;
#X connect 0 0 19 0;
#X connect 1 0 20 0;
#X connect 2 0 21 0;
#X connect 3 0 22 0;
#X connect 4 0 23 0;
#X connect 5 0 24 0;
#X connect 6 0 25 0;
#X connect 7 0 26 0;
#X connect 8 0 27 0;
#X connect 9 0 28 0;
#X connect 10 0 29 0;
#X connect 11 0 30 0;
#X connect 12 0 31 0;
#X connect 13 0 32 0;
#X connect 14 0 33 0;
#X connect 15 0 34 0;
#X connect 16 0 35 0;
#X connect 17 0 36 0;
#X connect 19 0 38 0;
#X connect 20 0 37 0;
#X restore 284 246 pd receive-normal;
#X text 36 27 !!->;
#N canvas 0 22 246 300 cmp 0;
#X obj 48 65 list split 1;
#X obj 99 119 ==;
#X obj 50 151 spigot;
#X obj 50 176 outlet;
#X obj 48 28 inlet;
#X obj 177 64 inlet;
#X connect 0 0 2 0;
#X connect 0 1 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 5 0 1 1;
#X restore 236 94 pd cmp;
#X obj 516 12 loadbang;
#X obj 516 37 f \$2;
#X obj 516 85 s \$1-psharg2;
#X connect 0 0 9 0;
#X connect 1 1 4 0;
#X connect 4 0 3 0;
#X connect 9 0 1 0;
#X connect 10 0 11 0;
#X connect 11 0 9 1;
#X connect 11 0 12 0;
#X restore 53 623 pd presetsnew;
#X connect 0 0 10 0;
#X connect 1 0 4 0;
#X connect 3 0 1 0;
#X connect 7 0 31 0;
#X connect 10 0 1 2;
#X connect 11 0 8 0;
#X connect 14 0 18 0;
#X connect 15 0 16 0;
#X connect 17 0 14 0;
#X connect 18 0 15 0;
#X connect 22 0 27 0;
#X connect 23 0 26 0;
#X connect 28 0 1 3;
#X connect 30 0 1 1;
#X connect 31 0 9 0;
#X restore -55 50 pd simple-pitchshift;
#N canvas 676 94 519 451 panner 0;
#X text -334 2 This sub-patch is for distributing an audio signal;
#X obj -324 412 outlet~ channel 1;
#X obj -54 412 outlet~ channel 2;
#X obj -324 367 *~;
#X obj -334 52 inlet~ audio signal;
#X obj -174 52 inlet control signal;
#X text -163 83 The control signal has to be between -1 and 1;
#X text -334 22 between two channels.;
#X obj -54 367 *~;
#X text -332 263 ------------------------------------------------------------
;
#X text -334 210 CHOOSE PANNING METHOD:;
#X obj -139 196 vradio 27 1 1 2 pan_method \$0-foo empty 0 -8 0 10
-262144 -1 -1 1;
#N canvas 833 324 643 404 panning_method_1 0;
#X floatatom -130 332 5 0 0 0 - - -;
#X text 131 283 -1 = full channel 1 \, nothing in channel 2;
#X text 139 323 1 = full channel 2 \, nothing in channel 1;
#X floatatom 70 332 5 0 0 0 - - -;
#X obj 60 242 expr ($f1 + 1)/2;
#X obj -140 302 expr 1 - $f1;
#X text -160 -8 PANNING METHOD 1:;
#X text 139 303 0 = half both channels;
#X obj 117 122 select 0;
#X obj 60 202 spigot;
#X msg 117 162 1;
#X msg 170 162 0;
#X text -160 12 Some simple mathematical magic. Crude but effective.
;
#X obj 60 52 r pan_ctrl_sig;
#X obj 117 92 r pan_method;
#X obj 60 362 s pan_1_ctrl_ch2;
#X obj -140 362 s pan_1_ctrl_ch1;
#X connect 4 0 3 0;
#X connect 4 0 5 0;
#X connect 4 0 15 0;
#X connect 5 0 0 0;
#X connect 5 0 16 0;
#X connect 8 0 10 0;
#X connect 8 1 11 0;
#X connect 9 0 4 0;
#X connect 10 0 9 1;
#X connect 11 0 9 1;
#X connect 13 0 9 0;
#X connect 14 0 8 0;
#X restore -104 196 pd panning_method_1;
#N canvas 833 324 587 425 panning_method_2 0;
#X obj -1 -1812 pan~;
#X text -57 -2146 PANNING METHOD 2:;
#X text -57 -2126 Just use the pan~ object to get a nice weighted panning.
;
#X text 174 -1845 -1 = full channel 1 \, nothing in channel 2;
#X text 182 -1805 1 = full channel 2 \, nothing in channel 1;
#X text 182 -1825 0 = both channels wieghted;
#X obj 82 -1892 spigot;
#X msg 139 -1992 1;
#X msg 192 -1992 0;
#X obj 139 -2032 select 1;
#X obj -47 -1892 spigot~;
#X obj 82 -1852 * 45;
#X obj 82 -2092 r pan_ctrl_sig;
#X obj -47 -2092 r~ atb;
#X obj 139 -2062 r pan_method;
#X obj -1 -1761 s~ pan_2_audio_ch1;
#X obj 173 -1761 s~ pan_2_audio_ch2;
#X connect 0 0 15 0;
#X connect 0 1 16 0;
#X connect 6 0 11 0;
#X connect 7 0 6 1;
#X connect 7 0 10 1;
#X connect 8 0 6 1;
#X connect 8 0 10 1;
#X connect 9 0 7 0;
#X connect 9 1 8 0;
#X connect 10 1 0 0;
#X connect 11 0 0 1;
#X connect 12 0 6 0;
#X connect 13 0 10 0;
#X connect 14 0 9 0;
#X restore -104 227 pd panning_method_2;
#X text -332 153 ------------------------------------------------------------
;
#X text 88 153 ----------;
#X text 88 263 ----------;
#X obj -334 112 s~ atb;
#X obj -174 112 s pan_ctrl_sig;
#X obj -264 367 r~ pan_2_audio_ch1;
#X obj 6 367 r~ pan_2_audio_ch2;
#X obj -36 327 r pan_1_ctrl_ch2;
#X obj -306 327 r pan_1_ctrl_ch1;
#X obj -54 287 r~ atb;
#X obj -324 287 r~ atb;
#X connect 3 0 1 0;
#X connect 4 0 17 0;
#X connect 5 0 18 0;
#X connect 8 0 2 0;
#X connect 19 0 1 0;
#X connect 20 0 2 0;
#X connect 21 0 8 1;
#X connect 22 0 3 1;
#X connect 23 0 8 0;
#X connect 24 0 3 0;
#X restore -55 250 pd panner;
#X text 239 70 http://home.base.be/hanstine/hans/index-eng.htm;
#N canvas 559 22 789 274 grannie-basher 0;
#X obj 6 238 outlet~ ch1;
#X obj 511 238 outlet~ ch2;
#X obj 6 8 inlet~ ch1;
#X obj 258 7 inlet~ ch2;
#X obj 6 48 grannie-basher;
#X obj 511 7 inlet granulation;
#X text 529 43 This is an abstraction;
#X text 529 63 sub-patch that makes use of the;
#X text 529 83 graph-on-parent property \, which;
#X text 529 103 is a "window" into the patch.;
#X text 529 143 in the properties of the sub-patch.;
#X text 529 123 You can set the graph-on-parent;
#X text 529 163 You can open the sub-patch in the;
#X text 529 183 usual way and see inside the window;
#X text 529 203 as a red rectangle.;
#X connect 2 0 4 0;
#X connect 3 0 4 1;
#X connect 4 0 0 0;
#X connect 4 1 1 0;
#X connect 5 0 4 2;
#X restore 54 401 pd grannie-basher;
#X text 243 420 http://www.pdpatchrepo.info/hurleur/grannie-basher.zip
;
#X text 92 50 <------------------- HACKED Simple-Pitchshift by Hans
Roels.;
#X text 15 250 <------------------------------ a panner;
#X obj 8 217 hsl 256 30 -1 1 0 1 empty empty empty -2 -8 0 10 -1 -257985
-1 12750 1;
#X msg -33 180 0;
#N canvas 246 22 387 159 filter 0;
#X obj 185 82 bp~;
#X obj 14 12 inlet~ unfiltered audio;
#X obj 185 112 outlet~ filtered audio;
#X obj 194 12 inlet center frequency;
#X floatatom 203 52 5 0 0 0 - - -;
#X text 242 52 <-- Q (resonance);
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 3 0 0 1;
#X connect 4 0 0 2;
#X restore -15 140 pd filter;
#X text 56 140 <------------------------ a filter;
#X obj 82 10 r s_pitch;
#X obj 45 110 r s_filter_freq;
#X obj 5 180 r s_position;
#X obj 170 371 r s_granulation;
#X obj -55 10 catch~ primary_snd;
#X obj 54 330 simplestereolooper;
#X text 180 400 <------- HACKED Grannie Basher.;
#X text 187 330 <------ a mean lean 2-channel looper machine;
#X obj 177 310 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 177 280 r s_looper;
#N canvas 185 178 400 290 limiter 0;
#X obj 24 22 inlet~;
#X msg 121 85 limit 100;
#X obj 121 21 loadbang;
#X obj 24 60 z~ 64;
#X obj 24 169 *~;
#X obj 24 200 outlet~;
#X obj 121 113 limiter~ 10;
#X text 22 245 https://guitarextended.wordpress.com/2013/08/05/making-a-looper-with-pure-data/
;
#X text 22 225 extracted from a patch downloaded from;
#X connect 0 0 3 0;
#X connect 0 0 6 0;
#X connect 1 0 6 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 6 0 4 1;
#X restore -55 491 pd limiter;
#X obj 55 531 outlet~ ch2;
#X obj -55 531 outlet~ ch1;
#N canvas 185 178 400 290 limiter 0;
#X obj 24 22 inlet~;
#X msg 121 85 limit 100;
#X obj 121 21 loadbang;
#X obj 24 60 z~ 64;
#X obj 24 169 *~;
#X obj 24 200 outlet~;
#X obj 121 113 limiter~ 10;
#X text 22 245 https://guitarextended.wordpress.com/2013/08/05/making-a-looper-with-pure-data/
;
#X text 22 225 extracted from a patch downloaded from;
#X connect 0 0 3 0;
#X connect 0 0 6 0;
#X connect 1 0 6 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 6 0 4 1;
#X restore 55 491 pd limiter;
#X floatatom 154 183 5 0 0 0 - - -;
#X connect 0 0 1 0;
#X connect 1 0 16 0;
#X connect 1 0 21 0;
#X connect 1 1 16 1;
#X connect 1 1 24 0;
#X connect 3 0 21 0;
#X connect 3 1 24 0;
#X connect 7 0 1 1;
#X connect 8 0 7 0;
#X connect 11 0 0 1;
#X connect 12 0 9 1;
#X connect 13 0 7 0;
#X connect 13 0 25 0;
#X connect 14 0 3 2;
#X connect 15 0 0 0;
#X connect 16 0 3 0;
#X connect 16 1 3 1;
#X connect 19 0 16 2;
#X connect 20 0 19 0;
#X connect 21 0 23 0;
#X connect 24 0 22 0;
#X restore 11 235 pd sound modification and output;
#X obj 11 283 dac~ 1;
#X obj 232 283 dac~ 2;
#N canvas 253 22 461 349 firegen 0;
#N canvas 0 22 242 454 crackles 0;
#X obj 72 394 *~;
#X obj 87 104 env~;
#X obj 87 80 lop~ 1;
#X msg 144 170 bang;
#X obj 87 127 moses 50;
#X obj 144 148 moses 51;
#X obj 144 193 random 30;
#X obj 144 237 line~;
#X msg 144 216 1 \, 0 \$1;
#X obj 144 265 *~;
#X obj 108 325 + 1500;
#X obj 72 349 bp~ 4000 1;
#X obj 108 303 * 500;
#X obj 72 419 outlet~;
#X obj 72 52 inlet~;
#X connect 0 0 13 0;
#X connect 1 0 4 0;
#X connect 2 0 1 0;
#X connect 3 0 6 0;
#X connect 4 1 5 0;
#X connect 5 0 3 0;
#X connect 6 0 8 0;
#X connect 6 0 12 0;
#X connect 7 0 9 0;
#X connect 7 0 9 1;
#X connect 8 0 7 0;
#X connect 9 0 0 1;
#X connect 10 0 11 1;
#X connect 11 0 0 0;
#X connect 12 0 10 0;
#X connect 14 0 2 0;
#X connect 14 0 11 0;
#X restore 25 156 pd crackles;
#N canvas 0 22 450 300 hissing 0;
#X obj 120 228 *~;
#X obj 204 57 lop~ 1;
#X obj 161 127 *~;
#X obj 75 58 hip~ 1000;
#X obj 159 163 *~;
#X obj 161 90 *~ 10;
#X obj 159 197 *~ 600;
#X obj 119 262 outlet~;
#X obj 126 27 inlet~;
#X connect 0 0 7 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 2 0 4 1;
#X connect 3 0 0 0;
#X connect 4 0 6 0;
#X connect 5 0 2 0;
#X connect 5 0 2 1;
#X connect 6 0 0 1;
#X connect 8 0 1 0;
#X connect 8 0 3 0;
#X restore 145 156 pd hissing;
#N canvas 0 22 170 271 lapping 0;
#X obj 24 109 clip~ -0.9 0.9;
#X obj 24 129 hip~ 25;
#X obj 24 86 hip~ 25;
#X obj 24 40 bp~ 30 5;
#X obj 24 65 *~ 100;
#X obj 24 153 *~ 0.6;
#X obj 23 177 outlet~;
#X obj 24 12 inlet~;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 7 0 3 0;
#X restore 257 156 pd lapping;
#X obj 211 65 noise~;
#X obj 25 213 *~ 0.2;
#X obj 257 213 *~ 0.6;
#X obj 145 213 *~ 0.3;
#X obj 211 95 spigot~;
#X obj 257 35 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 257 5 inlet toggle;
#X obj 415 77 vsl 15 120 0.01 1 1 0 empty empty empty 0 -9 0 10 -260097
-1 -1 0 1;
#X obj 110 158 vsl 15 40 0.01 1 1 0 empty empty empty 0 -9 0 10 -257985
-1 -1 0 1;
#X obj 223 158 vsl 15 40 0.01 1 1 0 empty empty empty 0 -9 0 10 -257985
-1 -1 0 1;
#X obj 335 158 vsl 15 40 0.01 1 1 0 empty empty empty 0 -9 0 10 -257985
-1 -1 0 1;
#X text 263 125 overall fire level-->;
#X text 71 31 fire generator on/off -->;
#X obj 257 263 *~;
#X text 21 257 Components of fire: crackles \,;
#X text 21 277 hissing and lapping.;
#X text 21 297 Each has a yellow slider to;
#X text 21 317 control signal amplitude (level).;
#X obj 257 293 throw~ primary_snd;
#X connect 0 0 4 0;
#X connect 1 0 6 0;
#X connect 2 0 5 0;
#X connect 3 0 7 0;
#X connect 4 0 16 0;
#X connect 5 0 16 0;
#X connect 6 0 16 0;
#X connect 7 1 0 0;
#X connect 7 1 1 0;
#X connect 7 1 2 0;
#X connect 8 0 7 1;
#X connect 9 0 8 0;
#X connect 10 0 16 1;
#X connect 11 0 4 1;
#X connect 12 0 6 1;
#X connect 13 0 5 1;
#X connect 16 0 21 0;
#X restore 21 105 pd firegen;
#X obj 11 85 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#X text 100 104 <--- HACKED Three-component fire synthesizer;
#X obj 11 35 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#N canvas 990 22 354 327 ear 0;
#X obj 176 36 vsl 15 120 0.01 1 1 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X obj 152 37 vu 15 120 VU_ch_1 empty -1 -8 0 10 -13381 -1 0 0;
#X obj -8 4 adc~ 1;
#X obj 130 228 spigot~;
#X obj 176 208 tgl 15 1 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X text 195 203 <-- VU meter on/off;
#X obj -8 139 spigot~;
#X obj 38 79 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#X obj 38 49 inlet toggle;
#X text 62 76 <-- on/off;
#X text 48 4 <-- Audio to Digital Channel (input) 1;
#X obj 38 178 *~;
#X obj 176 258 pvu~;
#X text 199 109 with the slider;
#X obj 176 288 s VU_ch_1;
#X obj 38 288 throw~ primary_snd;
#X text 197 89 set input level;
#X connect 0 0 11 1;
#X connect 2 0 6 0;
#X connect 3 1 12 0;
#X connect 4 0 3 1;
#X connect 6 1 11 0;
#X connect 7 0 6 1;
#X connect 8 0 7 0;
#X connect 11 0 3 0;
#X connect 11 0 15 0;
#X connect 12 0 14 0;
#X restore 21 55 pd ear;
#X text 72 54 <------- Audio input;
#X text 135 124 by James Farnell. This and other simple;
#X text 135 164 http://obiwannabe.co.uk;
#X text 135 144 and good patches can be downloaded from;
#X text 0 312 Digital to Audio Channels;
#X connect 5 0 6 0;
#X connect 5 1 7 0;
#X connect 9 0 8 0;
#X connect 11 0 12 0;
#X restore -25 173 pd sound_generation;
#N canvas 348 22 581 720 send_OSC 0;
#X msg 108 508 disconnect;
#X text 74 2 Note: IP \, port and path should match the receiving party
;
#X obj 107 153 metro;
#X floatatom 165 93 5 0 0 0 - - -;
#X obj 107 37 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 165 123 expr 360000/(6*$f1);
#X msg 16 -18 connect 192.168.43.57 6000;
#X obj 174 203 bng 30 250 50 0 empty empty empty 17 7 0 10 -1 -4034
-1;
#X msg 125 62 60;
#X msg 165 62 120;
#X text 16 -108 Send synchronisation clock OSC messages through a UDP
port;
#X obj 174 162 cnv 15 30 30 empty empty empty 20 12 0 14 -1 -262144
0;
#X obj 177 165 cnv 15 24 24 empty cnv_conn empty 20 12 0 14 -258699
-262144 0;
#X msg 107 207 1;
#N canvas 0 22 169 192 status_colors 0;
#X obj 13 -45 inlet;
#X obj 13 25 select 0;
#X msg 13 85 \; cnv_conn color \$1;
#X msg 66 55 256;
#X msg 13 55 103;
#X obj 73 -45 loadbang;
#X msg 73 -15 0;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 1 1 3 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 1 0;
#X restore 16 579 pd status_colors;
#X obj 16 -58 import mrpeach;
#X obj 26 508 packOSC;
#X obj 16 548 udpsend;
#X text 212 208 <---- local beat;
#X text 212 167 <---- conection status;
#X text 205 62 <----- set the tempo;
#X text 135 32 <--------------- turn the clock on or off;
#X text 205 -18 <----- input an IP and a port to connect;
#X text 135 -58 <--------------- this library is needed first!;
#X text 185 508 <-------- disconnect;
#X text 16 -93 Messages consist in 2 arguments;
#X msg 107 249 send /sync \$1;
#X obj 108 286 cnv 15 67 26 empty empty empty 20 12 0 14 -99865 -66577
0;
#X obj 108 286 cnv 15 65 24 empty empty empty 20 12 0 14 -204800 -66577
0;
#X obj 121 287 r k_p;
#X text 212 248 <---- send to the path /sync;
#X text 212 288 <---- send to the path /sync;
#X msg 101 359 send /pitch \$1;
#X obj 107 392 print;
#X obj 231 331 r direct_wii_p;
#X msg 220 359 send \$1;
#X msg 101 469 send /x \$1;
#X msg 211 469 send /y \$1;
#X obj 180 422 r direct_mouse_x;
#X obj 307 421 r direct_mouse_y;
#X obj 157 578 print;
#X connect 0 0 17 0;
#X connect 2 0 7 0;
#X connect 2 0 13 0;
#X connect 3 0 5 0;
#X connect 4 0 2 0;
#X connect 5 0 2 1;
#X connect 6 0 17 0;
#X connect 8 0 3 0;
#X connect 9 0 3 0;
#X connect 13 0 26 0;
#X connect 17 0 14 0;
#X connect 26 0 16 0;
#X connect 32 0 16 0;
#X connect 32 0 33 0;
#X connect 34 0 35 0;
#X connect 36 0 16 0;
#X connect 36 0 40 0;
#X connect 37 0 16 0;
#X connect 38 0 36 0;
#X connect 39 0 37 0;
#X restore -25 203 pd send_OSC;
#X connect 0 0 13 0;
#X connect 1 0 12 0;
#X connect 4 0 14 0;
#X connect 5 0 16 0;
#X connect 6 0 15 0;
#X restore -38 -8 pd __output_;
#X connect 2 0 4 0;
#X connect 2 1 4 1;
#X connect 2 2 4 2;
#X connect 2 3 4 3;
#X connect 2 4 4 4;
#X connect 3 0 2 0;
#X connect 3 1 2 1;
#X connect 3 2 2 2;
#X connect 3 3 2 3;
#X connect 3 4 2 4;
#X connect 3 5 2 5;
#X connect 3 6 2 6;
#X coords 0 236 1 235 85 60 0;
