#N canvas 419 25 426 658 12;
#X declare -lib mrpeach;
#X msg 76 442 disconnect;
#X msg -24 -28 connect 192.168.43.57 6000;
#N canvas 0 22 169 192 status_colors 0;
#X obj 13 -45 inlet;
#X obj 13 25 select 0;
#X msg 13 85 \; cnv_conn color \$1;
#X msg 66 55 256;
#X msg 13 55 103;
#X obj 73 -45 loadbang;
#X msg 73 -15 0;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 1 1 3 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 1 0;
#X restore -24 512 pd status_colors;
#X obj -24 -68 import mrpeach;
#X obj -14 352 packOSC;
#X obj -24 481 udpsend;
#N canvas 0 22 350 331 sync 0;
#X obj 162 83 expr 360000/(6*$f1);
#X obj 16 133 metro 1000;
#X obj 16 13 inlet toggle;
#X obj 116 13 inlet tempo;
#X msg 16 253 send /sync \$1;
#X obj 16 283 outlet;
#X text 126 253 <-- send to the path /sync;
#X obj 16 173 t b b;
#X msg 56 213 1;
#X msg 16 213 0;
#X obj 116 53 moses 0;
#X obj 116 213 s \$0-metro;
#X connect 0 0 1 1;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 3 0 10 0;
#X connect 4 0 5 0;
#X connect 7 0 9 0;
#X connect 7 1 8 0;
#X connect 7 1 11 0;
#X connect 8 0 4 0;
#X connect 9 0 4 0;
#X connect 10 1 0 0;
#X restore 76 162 pd sync;
#N canvas 55 25 341 286 mouse 0;
#X obj 15 42 cursor;
#X obj 15 116 route x y;
#X obj 15 82 route motion mousewheel button;
#X obj 15 11 inlet;
#X msg -75 216 send /mouse \$1 \$2;
#X obj -75 186 pack f f;
#X obj -75 246 outlet list;
#X obj 65 246 outlet x;
#X obj 145 246 outlet y;
#X connect 0 0 2 0;
#X connect 1 0 5 0;
#X connect 1 0 7 0;
#X connect 1 1 5 1;
#X connect 1 1 8 0;
#X connect 2 0 1 0;
#X connect 3 0 0 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X restore 76 242 pd mouse;
#X obj 137 163 bng 30 250 50 0 empty \$0-metro empty 17 7 0 10 -1 -257985
-1;
#X obj 137 501 cnv 15 30 30 empty empty empty 20 12 0 14 -1 -262144
0;
#X obj 140 504 cnv 15 24 24 empty cnv_conn empty 20 12 0 14 -258699
-262144 0;
#X obj 76 32 tgl 15 0 empty empty empty 17 7 0 10 -261682 -1 -1 0 1
;
#X floatatom 122 122 5 0 0 0 - - -;
#X text 165 122 <----- set tempo;
#X obj 76 212 tgl 15 0 empty empty empty 17 7 0 10 -204800 -1 -1 0
1;
#X text 95 29 <--------------- clock on/off;
#X text 95 209 <--------------- mouse on/off;
#X floatatom 102 277 4 0 0 0 - - -;
#X floatatom 142 277 4 0 0 0 - - -;
#X text 171 166 <---- local beat;
#X obj 76 322 tgl 15 0 empty empty empty 17 7 0 10 -203904 -1 -1 0
1;
#N canvas 221 22 746 601 wiimote 0;
#X obj -215 160 inlet toggle;
#X obj -254 130 udpreceive 5600;
#X obj -42 280 routeOSC /wii;
#X obj -144 360 unpack f f f;
#X obj 176 360 unpack f f;
#X obj 36 360 unpack f f;
#X obj -42 310 routeOSC /acc /orientation /irdata;
#X obj -254 210 spigot;
#X obj -215 190 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X text 398 540 middle;
#X text 398 470 RANGE:;
#X text -152 520 250;
#X text -152 540 125;
#X text -152 560 0;
#X text 25 520 right 100;
#X text 25 560 left -83;
#X text -235 0 -- GETTING DATA FROM THE WIIMOTE VIA OPEN SOUND CONTROL
--;
#X text -234 30 The method here requires an external software that
captures the data from the wiimote \, converts it to an OSC stream
and then send it through a network port. For Macintosh I recommend
Darwiinremote OSC \, shich is free. Also Osculator is good and not
very expensive.;
#X text -110 130 <-- This thing receives data through a network port.
The number of the port has four digits and has to be set to match the
sending entity. In this case the sending entity is an external software
that receives wiimote data from the bluetooth antenna of the computer
and converts it to OSC data.;
#X text 25 540 horiz. 8;
#X text 119 540 horiz. 0;
#X text 119 520 down 90;
#X text 119 560 up -90;
#X text 296 520 1;
#X text 289 540 0.5;
#X text 296 560 0;
#X text 232 520 right;
#X text 329 520 up;
#X text 232 560 left;
#X text 231 540 center;
#X text 329 540 center;
#X text 329 560 down;
#X text 398 520 upper lim.;
#X text 398 560 lower lim.;
#X text -218 475 x;
#X text -138 475 y;
#X text -48 475 z;
#X text 52 475 r;
#X text 132 475 p;
#X text 242 475 irx;
#X text 332 475 iry;
#X obj -42 250 unpackOSC;
#X obj -254 430 outlet osc;
#X obj -174 430 outlet x;
#X obj -104 430 outlet y;
#X obj -34 430 outlet z;
#X obj 36 430 outlet r;
#X obj 106 430 outlet p;
#X obj 176 430 outlet irx;
#X obj 256 430 outlet iry;
#X text 222 500 |------ irdata ------|;
#X text 15 500 |----- orientation -----|;
#X text -252 500 |------------- acc -------------|;
#X obj 36 400 i;
#X obj 106 400 i;
#X connect 0 0 8 0;
#X connect 1 0 7 0;
#X connect 2 0 6 0;
#X connect 3 0 43 0;
#X connect 3 1 44 0;
#X connect 3 2 45 0;
#X connect 4 0 48 0;
#X connect 4 1 49 0;
#X connect 5 0 53 0;
#X connect 5 1 54 0;
#X connect 6 0 3 0;
#X connect 6 1 5 0;
#X connect 6 2 4 0;
#X connect 7 0 41 0;
#X connect 7 0 42 0;
#X connect 8 0 7 1;
#X connect 41 0 2 0;
#X connect 53 0 46 0;
#X connect 54 0 47 0;
#X restore 76 352 pd wiimote via OSC;
#X text 153 441 <------- disconnect;
#X text 95 319 <--------------- wii on/off;
#X obj 122 62 tgl 15 0 empty empty empty 17 7 0 10 -262130 -1 -1 0
1;
#X text 144 59 <-------- tempo modulation on/off;
#N canvas 0 22 317 261 tempo_modulation 0;
#X obj 6 121 cup;
#X msg 26 92 0;
#X text 55 90 <--------------- reset the counter;
#X obj 95 21 inlet tgl;
#X obj 6 21 r \$0-metro;
#X obj 6 61 spigot;
#X obj 6 151 expr (sin($f1) + 1)*50 + 20;
#X obj 6 221 outlet;
#X obj 6 191 i;
#X connect 0 0 6 0;
#X connect 1 0 0 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 0 0;
#X connect 6 0 8 0;
#X connect 8 0 7 0;
#X restore 122 91 pd tempo_modulation;
#X floatatom 93 393 3 0 0 0 - - -;
#X floatatom 123 393 3 0 0 0 - - -;
#X floatatom 153 393 3 0 0 0 - - -;
#X floatatom 183 393 3 0 0 0 - - -;
#X floatatom 213 393 3 0 0 0 - - -;
#X text 99 409 x;
#X text 129 409 y;
#X text 159 409 z;
#X text 189 409 r;
#X text 219 409 p;
#X text 111 293 x;
#X text 149 293 y;
#X text 173 505 <---- connection status;
#X text 214 -8 receiving party;
#X text 165 -28 <----- IP and port of;
#X text 95 -68 <--------------- load library;
#X text -24 -103 clock \, mouse and wii;
#X text -24 -118 Send OSC messages through a UDP port:;
#X connect 0 0 5 0;
#X connect 1 0 5 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X connect 6 0 4 0;
#X connect 7 0 4 0;
#X connect 7 1 17 0;
#X connect 7 2 18 0;
#X connect 11 0 6 0;
#X connect 12 0 6 1;
#X connect 14 0 7 0;
#X connect 20 0 21 0;
#X connect 21 0 5 0;
#X connect 21 1 27 0;
#X connect 21 2 28 0;
#X connect 21 3 29 0;
#X connect 21 4 30 0;
#X connect 21 5 31 0;
#X connect 24 0 26 0;
#X connect 26 0 12 0;
