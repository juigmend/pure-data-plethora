#N canvas 29 432 951 326 12;
#X declare -lib iemmatrix;
#X obj 497 290 outlet control;
#N canvas 696 24 475 731 information 0;
#X text -37 34 detection of 3D (3-dimensional) arrays by the abstraction
;
#X text -9 534 a class number.;
#X text -37 614 5 - Else \,;
#X text -37 654 7 - End If;
#X text -37 674 8 - Repeat from 2;
#X text -37 594 4 -;
#X text -37 634 6 -;
#X text 3 634 learn the new 3D array and assign a new class number
;
#X text -37 574 3 - If the new 3D array has been learned \, then;
#X text -37 554 2 - Allow a new 3D array.;
#X text -37 514 1 - Allow the first 3D array and learn it \, assigning
it;
#X text 3 594 return the new 3D array's class number;
#X text -37 14 This abstraction manages the automatic learning and
;
#X text -37 84 Wekinator has to be set so that inputs are 3 and;
#X text -37 104 "matches computed only once running stops".;
#X text -37 134 INLET 1: 3D array. A finite set of lists \, each having
;
#X text 26 154 3 elements.;
#X text -37 54 'wekidtw_xyz' \, which has to be connected before wekinating.
;
#X text -37 464 OUTLET 2: Commands \, to wekidtw_xyz inlet 2;
#X text -37 434 OUTLET 1: 3D array \, to wekidtw_xyz inlet 1;
#X text -37 184 INLET 2: 1 = start of the array \, 0 = end of the array
;
#X text -37 304 INLET 4: Detected class (an integer) \, 0 = not learned
yet.;
#X text -37 404 INLET 6: 1 = connect to wekinator \, 0 = disconnect
;
#X text -37 334 INLET 5: 0 = stop;
#X text 26 353 1 = train;
#X text 26 373 2 = perform;
#X text -37 494 Training algorithm:;
#X text -37 214 INLET 3: training and performing distance thresholds
(list);
#X text 25 234 Whent training \, below the threshold the array is;
#X text 25 254 considered learned. When performing \, below the;
#X text 26 274 threshold the array is considered detected.;
#X restore 830 70 pd information;
#X obj 105 290 outlet 3D-array;
#X msg 386 190 threshold \$1;
#X text 725 290 Juan Ignacio Mendoza - 2019;
#X obj 519 10 inlet class;
#X obj 263 10 inlet start/end;
#X msg 810 220 connect \$1;
#X obj 810 10 inlet connect tgl;
#X obj 611 10 inlet stp;
#X obj 10 100 cyclone/gate 2;
#X obj 105 10 inlet 3D-array;
#N canvas 281 195 490 180 fake_data 0;
#X msg -48 115 0.5 0.5 0.5;
#X obj -48 15 inlet;
#X obj -48 145 outlet;
#X text 41 45 It is necessary to send this fake data before the last
;
#X text 41 85 is stopped without sending any data.;
#X text 41 65 "detect 0" \, as Wekinator will halt if the "run" state
;
#X obj -48 45 t b b b;
#X connect 0 0 2 0;
#X connect 1 0 6 0;
#X connect 6 0 0 0;
#X connect 6 1 0 0;
#X connect 6 2 0 0;
#X restore 167 260 pd fake_data;
#X obj 519 40 s \$0-class;
#X obj 187 130 r \$0-class;
#N canvas 455 88 863 712 training_engine 0;
#X obj -40 556 mtx_spitarray 120 3;
#N canvas 664 22 365 280 allow_one_seg 0;
#X msg 198 -46 0;
#X msg 106 -46 1;
#X obj 237 44 spigot;
#X msg 276 -46 1;
#X obj 276 -106 inlet bang;
#X text 294 -81 allow;
#X obj 7 -106 inlet signal;
#X obj 7 94 spigot;
#X obj 198 -16 t b a a;
#X obj 7 124 outlet signal;
#X obj 198 124 outlet endseg;
#X obj 106 -106 inlet start;
#X obj 198 -106 inlet end;
#X connect 0 0 8 0;
#X connect 1 0 2 0;
#X connect 2 0 7 1;
#X connect 3 0 2 1;
#X connect 4 0 3 0;
#X connect 6 0 7 0;
#X connect 7 0 9 0;
#X connect 8 0 10 0;
#X connect 8 1 7 1;
#X connect 8 2 2 1;
#X connect 11 0 1 0;
#X connect 12 0 0 0;
#X restore -40 466 pd allow_one_seg;
#X msg 188 526 1;
#X msg 90 526 0;
#X msg 574 345 0;
#X obj 218 376 t b b;
#X msg 218 436 1;
#X text 103 557 memory;
#X obj 79 376 r \$0-getseg;
#X obj 250 406 s \$0-getseg;
#X obj 90 466 r \$0-getmem;
#X obj 574 254 r \$0-gotmem;
#X obj 32 114 spigot;
#X obj 574 314 spigot;
#X obj 613 284 r \$0-lbl;
#X obj 144 254 s \$0-dbl;
#X msg 412 526 0;
#X obj 412 556 s \$0-dbl;
#X obj 32 436 once;
#X obj 218 466 t a a;
#X msg 264 555 0;
#X obj 264 436 r \$0-gotmem;
#X obj 264 526 spigot;
#X obj 303 466 r \$0-dbl;
#X obj 378 345 select 0;
#X text 377 322 0 = null class;
#X obj -4 84 select 1 0;
#X obj 293 14 inlet class;
#X obj 86 14 inlet start/end;
#X obj 293 314 spigot;
#X msg 378 376 1;
#X obj 680 114 select 1;
#X obj -40 14 inlet 3D-array;
#X obj -40 665 outlet 3D-array;
#X msg 680 615 clear;
#X msg 489 615 detect \$1;
#X msg 605 615 learn \$1;
#X obj 605 665 outlet control;
#N canvas 47 44 618 356 start_training 0;
#X msg 81 88 1;
#X msg 42 243 0;
#X obj 42 198 spigot;
#X msg 282 138 0;
#X obj 42 273 trigger b a;
#X obj 183 313 outlet learn;
#X obj 282 313 outlet dbl;
#X obj 384 313 outlet lbl;
#X obj 282 168 trigger any any;
#X obj -68 38 trigger bang bang bang;
#X obj -68 313 outlet getseg;
#X obj 350 8 inlet gotmem;
#X obj -68 8 inlet start_training;
#X obj 42 88 del;
#X obj 210 8 inlet abort_start;
#X obj 210 168 spigot;
#X obj 42 313 outlet checknew;
#X obj 81 168 trigger any any;
#X text 231 76 this learn process might be duplicated;
#X text 231 96 check if possible to reduce this sub-patch;
#X text 231 56 TO-DO:;
#X connect 0 0 15 1;
#X connect 0 0 17 0;
#X connect 1 0 2 1;
#X connect 1 0 4 0;
#X connect 1 0 15 1;
#X connect 2 0 1 0;
#X connect 3 0 8 0;
#X connect 4 0 16 0;
#X connect 4 1 5 0;
#X connect 8 0 6 0;
#X connect 8 1 7 0;
#X connect 9 0 10 0;
#X connect 9 1 0 0;
#X connect 9 2 3 0;
#X connect 11 0 13 0;
#X connect 12 0 9 0;
#X connect 13 0 2 0;
#X connect 14 0 15 0;
#X connect 15 0 5 0;
#X connect 17 0 2 1;
#X connect 17 1 5 0;
#X restore 57 194 pd start_training;
#X obj 115 285 s \$0-learn;
#X obj 605 585 r \$0-learn;
#X obj 446 496 s \$0-lbl;
#X obj 480 466 s \$0-learn;
#X obj 218 345 r \$0-checknew;
#X obj 86 315 s \$0-checknew;
#X obj 574 526 s \$0-checknew;
#X obj 489 585 r \$0-detect;
#X obj 218 584 s \$0-detect;
#X obj 57 345 s \$0-getseg;
#X obj 173 164 r \$0-gotmem;
#X obj 153 114 select 1;
#X obj 173 224 s \$0-lbl;
#X obj 364 164 r \$0-learn;
#X obj 364 254 select 0;
#X msg 332 284 0;
#X msg 461 284 1;
#X obj 461 114 select 0;
#X obj 398 15 inlet stp;
#N canvas 409 236 156 194 training_tgl 0;
#X obj 18 14 inlet stp;
#X obj 18 154 outlet train_tgl;
#X obj 18 124 change 0;
#X msg 18 84 0;
#X obj 18 44 select 0 2 1;
#X msg 72 84 1;
#X connect 0 0 4 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 4 1 3 0;
#X connect 4 2 5 0;
#X connect 5 0 2 0;
#X restore 398 44 pd training_tgl;
#X obj 364 224 spigot;
#X msg 461 224 0;
#X msg 461 164 1;
#X obj 364 665 outlet trainend;
#X obj 574 496 spigot;
#X obj 613 466 r \$0-cbl;
#X obj 537 114 s \$0-cbl;
#X obj 79 406 t bang bang bang;
#X obj 398 64 trigger any any any any any;
#X obj 514 164 t b b;
#X msg 323 164 0;
#X obj 431 406 s \$0-d_class;
#X obj 323 134 r \$0-d_class;
#X obj 538 221 print gotmem;
#X obj 574 376 t b a a;
#X obj 597 436 s \$0-learn;
#X obj 620 406 s \$0-lbl;
#X obj 431 375 trigger bang bang;
#X obj 378 436 trigger b b a a;
#X obj 25 584 s \$0-gotmem;
#X obj 378 616 s \$0-getmem;
#X obj 378 586 del;
#X connect 0 0 33 0;
#X connect 0 1 78 0;
#X connect 1 0 0 0;
#X connect 1 1 3 0;
#X connect 2 0 0 3;
#X connect 3 0 0 3;
#X connect 4 0 73 0;
#X connect 5 0 6 0;
#X connect 5 1 9 0;
#X connect 6 0 19 0;
#X connect 8 0 66 0;
#X connect 10 0 3 0;
#X connect 11 0 72 0;
#X connect 11 0 13 0;
#X connect 12 0 18 0;
#X connect 13 0 4 0;
#X connect 14 0 13 1;
#X connect 16 0 17 0;
#X connect 18 0 1 2;
#X connect 19 0 47 0;
#X connect 19 1 22 1;
#X connect 20 0 47 0;
#X connect 21 0 22 0;
#X connect 22 0 20 0;
#X connect 23 0 22 1;
#X connect 24 0 30 0;
#X connect 24 1 76 0;
#X connect 26 0 1 1;
#X connect 26 1 12 0;
#X connect 27 0 29 0;
#X connect 28 0 26 0;
#X connect 29 0 24 0;
#X connect 30 0 77 0;
#X connect 31 0 34 0;
#X connect 32 0 1 0;
#X connect 34 0 37 0;
#X connect 35 0 37 0;
#X connect 36 0 37 0;
#X connect 38 0 48 0;
#X connect 38 1 44 0;
#X connect 38 2 39 0;
#X connect 38 3 15 0;
#X connect 38 4 51 0;
#X connect 40 0 36 0;
#X connect 43 0 5 0;
#X connect 46 0 35 0;
#X connect 49 0 38 2;
#X connect 50 0 38 0;
#X connect 50 1 38 1;
#X connect 52 0 59 0;
#X connect 53 0 54 0;
#X connect 53 0 60 0;
#X connect 53 0 62 0;
#X connect 54 0 29 1;
#X connect 55 0 29 1;
#X connect 56 0 61 0;
#X connect 56 1 68 0;
#X connect 57 0 58 0;
#X connect 58 0 67 0;
#X connect 59 0 53 0;
#X connect 60 0 59 1;
#X connect 61 0 59 1;
#X connect 63 0 45 0;
#X connect 64 0 63 1;
#X connect 66 0 18 1;
#X connect 66 1 1 3;
#X connect 66 2 2 0;
#X connect 67 0 12 1;
#X connect 67 1 50 0;
#X connect 67 2 56 0;
#X connect 67 3 65 0;
#X connect 67 4 31 0;
#X connect 68 0 60 0;
#X connect 68 1 55 0;
#X connect 69 0 59 0;
#X connect 71 0 69 0;
#X connect 73 0 63 0;
#X connect 73 1 74 0;
#X connect 73 2 75 0;
#X connect 76 0 70 0;
#X connect 76 1 63 0;
#X connect 77 0 80 0;
#X connect 77 1 16 0;
#X connect 77 2 41 0;
#X connect 77 3 42 0;
#X connect 80 0 79 0;
#X restore 105 160 pd training_engine;
#N canvas 411 491 375 325 performing_engine 0;
#X obj 6 14 inlet start/end;
#X obj 6 154 spigot;
#X obj 127 44 t a a;
#X msg 45 194 0;
#X obj 191 265 outlet send_fake_data;
#X obj 6 264 outlet control;
#X msg 6 225 detect \$1;
#X obj 159 154 t b b;
#X obj 127 15 inlet stp;
#X msg 45 124 1;
#X msg 98 124 0;
#X obj 45 94 select 2;
#N canvas 376 131 428 187 detectend 0;
#X obj 16 -76 inlet;
#X msg 16 -16 1;
#X text 158 -54 (when stopping performing) \,;
#X text 158 -14 otherwise \, don't output anything;
#X text 158 -34 then output a bang;
#X text 158 -74 if number in inlet is 0 or 1 after 2;
#X obj 70 35 spigot;
#X msg 109 -16 0;
#X obj 16 -46 select 2 0 1;
#X obj 70 64 outlet;
#X connect 0 0 8 0;
#X connect 1 0 6 1;
#X connect 6 0 7 0;
#X connect 6 0 9 0;
#X connect 7 0 6 1;
#X connect 8 0 1 0;
#X connect 8 1 6 0;
#X connect 8 2 6 0;
#X restore 159 124 pd detectend;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 2 0 11 0;
#X connect 2 1 12 0;
#X connect 3 0 6 0;
#X connect 6 0 5 0;
#X connect 7 0 3 0;
#X connect 7 1 4 0;
#X connect 8 0 2 0;
#X connect 9 0 1 1;
#X connect 10 0 1 1;
#X connect 11 0 9 0;
#X connect 11 1 10 0;
#X connect 12 0 7 0;
#X restore 497 190 pd performing_engine;
#X obj 263 100 s \$0-start/end;
#X obj 146 100 r \$0-start/end;
#X obj 497 160 r \$0-start/end;
#X obj 10 40 r \$0-stp;
#X obj 167 230 r \$0-sfake;
#X obj 634 218 s \$0-sfake;
#N canvas 0 22 146 186 stp_conv 0;
#X obj 16 -19 inlet;
#X obj 83 101 outlet;
#X obj 16 11 select 1 2;
#X msg 9 49 2;
#X msg 49 49 1;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 2 2 1 0;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X restore 10 70 pd stp_conv;
#X obj 611 40 spigot;
#X obj 263 70 spigot;
#X text 229 290 <--------- to wekidtw_xyz --------->;
#X obj 166 200 s \$0-trainend;
#N canvas 0 22 234 169 safe_stoprun 0;
#X obj 90 76 s \$0-sfake;
#X obj 16 46 trigger b b;
#X obj 16 16 inlet;
#X obj 16 106 s \$0-detect;
#X msg 16 76 0;
#X connect 1 0 4 0;
#X connect 1 1 0 0;
#X connect 2 0 1 0;
#X connect 4 0 3 0;
#X restore 139 70 pd safe_stoprun;
#X obj 139 37 bng 20 250 50 0 empty empty empty 17 7 0 10 -258113 -257985
-1;
#X text 163 32 safely;
#N canvas 120 139 471 415 trainend 0;
#X msg 16 124 1;
#X text 168 106 in inlet 2;
#X text 168 46 if number in inlet 1 is 0 or 2 after 1;
#X text 168 66 (when stopping training) \,;
#X text 168 86 then output the number until a bang;
#X text 168 126 otherwise \, output the number immediately;
#X obj 153 254 f;
#X obj 37 54 select 1 0 2;
#X msg 64 124 0;
#X msg 112 124 2;
#X obj 90 304 multiplex;
#X msg 192 304 0;
#X obj 153 14 inlet;
#X obj 37 14 inlet;
#X obj 16 364 outlet;
#X connect 0 0 10 2;
#X connect 0 0 14 0;
#X connect 6 0 10 1;
#X connect 7 0 0 0;
#X connect 7 1 8 0;
#X connect 7 2 9 0;
#X connect 8 0 6 1;
#X connect 8 0 10 0;
#X connect 9 0 6 1;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 10 0 14 0;
#X connect 11 0 10 2;
#X connect 12 0 6 0;
#X connect 13 0 7 0;
#X restore 634 160 pd trainend;
#X obj 708 130 r \$0-trainend;
#X obj 611 70 t a a a;
#X obj 657 100 s \$0-stp;
#X obj 386 10 inlet thresholds;
#N canvas 0 22 253 181 thresholds 0;
#X obj 71 146 outlet threshold;
#X obj 22 16 inlet thresholds;
#X obj 149 16 inlet stp;
#X obj 22 46 unpack f f;
#X obj 149 46 select 1 2;
#X obj 4 106 f;
#X obj 71 106 f;
#X connect 1 0 3 0;
#X connect 2 0 4 0;
#X connect 3 0 5 1;
#X connect 3 1 6 1;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X restore 386 160 pd thresholds;
#X obj 474 130 r \$0-stp;
#X obj 302 40 r \$0-stp;
#X text 163 45 stop running;
#X connect 3 0 0 0;
#X connect 5 0 13 0;
#X connect 6 0 25 0;
#X connect 7 0 0 0;
#X connect 8 0 7 0;
#X connect 8 0 24 1;
#X connect 9 0 24 0;
#X connect 10 0 2 0;
#X connect 10 1 15 0;
#X connect 11 0 10 1;
#X connect 12 0 2 0;
#X connect 14 0 15 2;
#X connect 15 0 2 0;
#X connect 15 1 27 0;
#X connect 15 2 0 0;
#X connect 16 0 0 0;
#X connect 16 1 22 0;
#X connect 18 0 15 1;
#X connect 19 0 16 0;
#X connect 20 0 23 0;
#X connect 21 0 12 0;
#X connect 23 0 10 0;
#X connect 24 0 33 0;
#X connect 25 0 17 0;
#X connect 29 0 28 0;
#X connect 31 0 16 1;
#X connect 32 0 31 1;
#X connect 33 0 15 3;
#X connect 33 1 31 0;
#X connect 33 2 34 0;
#X connect 35 0 36 0;
#X connect 36 0 3 0;
#X connect 37 0 36 1;
#X connect 38 0 25 1;
#X coords 0 -1 1 1 165 15 1 740 270;
